加载数据...
['a stirring , funny and finally transporting re-imagining of beauty and the beast and 1930s horror films', 'apparently reassembled from the cutting-room floor of any given daytime soap .', "they presume their audience wo n't sit still for a sociology lesson , however entertainingly presented , so they trot out the conventional science-fiction elements of bug-eyed monsters and futuristic women in skimpy clothes .", 'this is a visually stunning rumination on love , memory , history and the war between art and commerce .', "jonathan parker 's bartleby should have been the be-all-end-all of the modern-office anomie films ."]
[1, 0, 0, 1, 1]
Time usage: 0:00:08
Some weights of the model checkpoint at /home/huyiwen/pretrained/bert were not used when initializing BertModel: ['cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.seq_relationship.bias', 'cls.seq_relationship.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.decoder.weight', 'cls.predictions.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
BERT_Model(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(21128, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (fc): Linear(in_features=768, out_features=192, bias=True)
  (fc1): Linear(in_features=192, out_features=2, bias=True)
)
Epoch [1/3]
Iter:      0,  Train Loss:  0.69,  Train Acc: 55.86%,  Val Loss:   0.9,  Val Acc: 49.92%,  Time: 0:00:14 *
Iter:     10,  Train Loss:   0.7,  Train Acc: 48.83%,  Val Loss:  0.69,  Val Acc: 56.78%,  Time: 0:00:32 *
Iter:     20,  Train Loss:  0.67,  Train Acc: 58.98%,  Val Loss:  0.68,  Val Acc: 58.70%,  Time: 0:00:49 *
Epoch [2/3]
Iter:     30,  Train Loss:  0.69,  Train Acc: 52.34%,  Val Loss:  0.68,  Val Acc: 54.48%,  Time: 0:00:57
Iter:     40,  Train Loss:  0.66,  Train Acc: 59.38%,  Val Loss:  0.69,  Val Acc: 56.40%,  Time: 0:01:06
Iter:     50,  Train Loss:  0.66,  Train Acc: 60.55%,  Val Loss:  0.65,  Val Acc: 61.78%,  Time: 0:01:21 *
Epoch [3/3]
Iter:     60,  Train Loss:  0.66,  Train Acc: 60.94%,  Val Loss:  0.64,  Val Acc: 63.59%,  Time: 0:01:34 *
Iter:     70,  Train Loss:  0.66,  Train Acc: 58.59%,  Val Loss:  0.66,  Val Acc: 60.57%,  Time: 0:01:42
Iter:     80,  Train Loss:  0.64,  Train Acc: 64.06%,  Val Loss:  0.65,  Val Acc: 63.26%,  Time: 0:01:51
Test Loss:  0.64,  Test Acc: 61.29%
Precision, Recall and F1-Score...
              precision    recall  f1-score   support
           0     0.5775    0.8454    0.6862       912
           1     0.7099    0.3795    0.4946       909
    accuracy                         0.6129      1821
   macro avg     0.6437    0.6125    0.5904      1821
weighted avg     0.6436    0.6129    0.5906      1821
Confusion Matrix...
[[771 141]
 [564 345]]
Time usage: 0:00:04
Traceback (most recent call last):
  File "/home/huyiwen/CV/bilstm/distill.py", line 69, in <module>
    S_model = biLSTM(cfg).to(cfg.device)
  File "/home/huyiwen/CV/bilstm/models/lstm_mpo.py", line 148, in __init__
    self.Embedding = EmbeddingMPO(config.tokenizer.vocab_size, config.LSTM_embedding_dim, *self.embedding_mpo_config)
  File "/home/huyiwen/CV/bilstm/models/linear_mpo.py", line 548, in __init__
    self.tensor_set = self._parameter_decompose(_weight, requires_grad=not freeze, device=device, dtype=dtype)
  File "/home/huyiwen/CV/bilstm/models/linear_mpo.py", line 563, in _parameter_decompose
    tensor_set, _, _ = self.mpo.matrix2mpo(weight.T)
  File "/home/huyiwen/CV/bilstm/models/linear_mpo.py", line 258, in matrix2mpo
    tensor_set = self.get_tensor_set(inp_matrix)
  File "/home/huyiwen/CV/bilstm/models/linear_mpo.py", line 136, in get_tensor_set
    u, lamda, v = np.linalg.svd(res, full_matrices=False)
  File "<__array_function__ internals>", line 180, in svd
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/numpy/linalg/linalg.py", line 1657, in svd
    u, s, vh = gufunc(a, signature=signature, extobj=extobj)
KeyboardInterrupt