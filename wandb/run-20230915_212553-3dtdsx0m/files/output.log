加载数据...
['a stirring , funny and finally transporting re-imagining of beauty and the beast and 1930s horror films', 'apparently reassembled from the cutting-room floor of any given daytime soap .', "they presume their audience wo n't sit still for a sociology lesson , however entertainingly presented , so they trot out the conventional science-fiction elements of bug-eyed monsters and futuristic women in skimpy clothes .", 'this is a visually stunning rumination on love , memory , history and the war between art and commerce .', "jonathan parker 's bartleby should have been the be-all-end-all of the modern-office anomie films ."]
[1, 0, 0, 1, 1]
Time usage: 0:00:13
Some weights of the model checkpoint at /home/huyiwen/pretrained/bert-base-uncased-SST-2 were not used when initializing BertModel: ['classifier.weight', 'classifier.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
BERT_Model(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (fc): Linear(in_features=768, out_features=192, bias=True)
  (fc1): Linear(in_features=192, out_features=2, bias=True)
)
cuda
biLSTM(
  (Embedding): Embedding(30522, 300)
  (lstm): LSTM(300, 300, batch_first=True, bidirectional=True)
  (fc1): LinearDecomMPO(
    mpo=True, in_features=600, out_features=192, bias=True
    (tensor_set): ParameterList(
        (0): Parameter containing: [torch.float32 of size 1x10x6x60 (cuda:0)]
        (1): Parameter containing: [torch.float32 of size 60x2x2x240 (cuda:0)]
        (2): Parameter containing: [torch.float32 of size 240x1x1x240 (cuda:0)]
        (3): Parameter containing: [torch.float32 of size 240x3x2x80 (cuda:0)]
        (4): Parameter containing: [torch.float32 of size 80x10x8x1 (cuda:0)]
    )
  )
  (fc2): LinearDecomMPO(
    mpo=True, in_features=192, out_features=2, bias=True
    (tensor_set): ParameterList(
        (0): Parameter containing: [torch.float32 of size 1x6x2x12 (cuda:0)]
        (1): Parameter containing: [torch.float32 of size 12x2x1x16 (cuda:0)]
        (2): Parameter containing: [torch.float32 of size 16x1x1x16 (cuda:0)]
        (3): Parameter containing: [torch.float32 of size 16x2x1x8 (cuda:0)]
        (4): Parameter containing: [torch.float32 of size 8x8x1x1 (cuda:0)]
    )
  )
)
10,843,098 total parameters.
Epoch [1/30]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Iter:      0,  Train Loss: 7.8e+03,  Train Acc: 37.50%,  Val Loss: 1.6e+04,  Val Acc: 50.19%,  Time: 0:00:05 *,  LR: [0.005]
Iter:     50,  Train Loss: 2.6e+01,  Train Acc: 62.50%,  Val Loss: 2.4e+01,  Val Acc: 49.75%,  Time: 0:00:12 *,  LR: [0.005]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Iter:    100,  Train Loss: 2.4e+01,  Train Acc: 46.88%,  Val Loss: 2.4e+01,  Val Acc: 49.70%,  Time: 0:00:16 *,  LR: [0.005]
Epoch [2/30]
Iter:    150,  Train Loss: 2.6e+01,  Train Acc: 56.25%,  Val Loss: 2.4e+01,  Val Acc: 49.59%,  Time: 0:00:21 *,  LR: [0.005]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Iter:    200,  Train Loss: 2.6e+01,  Train Acc: 50.00%,  Val Loss: 2.4e+01,  Val Acc: 49.75%,  Time: 0:00:25 ,  LR: [0.005]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Epoch [3/30]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Iter:    250,  Train Loss: 2.6e+01,  Train Acc: 57.81%,  Val Loss: 2.4e+01,  Val Acc: 49.86%,  Time: 0:00:28 ,  LR: [0.005]
Iter:    300,  Train Loss: 2.3e+01,  Train Acc: 64.06%,  Val Loss: 2.4e+01,  Val Acc: 49.75%,  Time: 0:00:31 ,  LR: [0.005]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Epoch [4/30]
Iter:    350,  Train Loss: 2.7e+01,  Train Acc: 40.62%,  Val Loss: 2.4e+01,  Val Acc: 49.64%,  Time: 0:00:34 ,  LR: [0.005]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Iter:    400,  Train Loss: 2.5e+01,  Train Acc: 46.88%,  Val Loss: 2.4e+01,  Val Acc: 49.64%,  Time: 0:00:38 *,  LR: [0.005]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Epoch [5/30]
Iter:    450,  Train Loss: 2.5e+01,  Train Acc: 48.44%,  Val Loss: 2.4e+01,  Val Acc: 49.75%,  Time: 0:00:42 *,  LR: [0.005]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Iter:    500,  Train Loss: 2.6e+01,  Train Acc: 43.75%,  Val Loss: 2.4e+01,  Val Acc: 49.75%,  Time: 0:00:46 *,  LR: [0.005]
Epoch [6/30]
/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/optim/lr_scheduler.py:1373: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "
Iter:    550,  Train Loss: 2.6e+01,  Train Acc: 54.69%,  Val Loss: 2.4e+01,  Val Acc: 49.70%,  Time: 0:00:50 *,  LR: [0.005]
Traceback (most recent call last):
  File "/home/huyiwen/CV/bilstm/distill.py", line 72, in <module>
    student_train(T_model, S_model, cfg, train_loader, test_loader)
  File "/home/huyiwen/CV/bilstm/student.py", line 116, in student_train
    loss.backward()
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/_tensor.py", line 492, in backward
    torch.autograd.backward(
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/autograd/__init__.py", line 251, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt