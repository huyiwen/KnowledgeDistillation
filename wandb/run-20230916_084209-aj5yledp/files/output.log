加载数据...
['a stirring , funny and finally transporting re-imagining of beauty and the beast and 1930s horror films', 'apparently reassembled from the cutting-room floor of any given daytime soap .', "they presume their audience wo n't sit still for a sociology lesson , however entertainingly presented , so they trot out the conventional science-fiction elements of bug-eyed monsters and futuristic women in skimpy clothes .", 'this is a visually stunning rumination on love , memory , history and the war between art and commerce .', "jonathan parker 's bartleby should have been the be-all-end-all of the modern-office anomie films ."]
[1, 0, 0, 1, 1]
Time usage: 0:00:12
Some weights of the model checkpoint at /home/huyiwen/pretrained/bert-base-uncased-SST-2 were not used when initializing BertModel: ['classifier.bias', 'classifier.weight']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
BERT_Model(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (fc): Linear(in_features=768, out_features=192, bias=True)
  (fc1): Linear(in_features=192, out_features=2, bias=True)
)
cuda
biLSTM(
  (Embedding): Embedding(30522, 300)
  (lstm): LSTM(300, 300, batch_first=True, bidirectional=True)
  (fc1): LinearDecomMPO(
    (tensor_set): ParameterList(
        (0): Parameter containing: [torch.float32 of size 3600 (cuda:0)]
        (1): Parameter containing: [torch.float32 of size 57600 (cuda:0)]
        (2): Parameter containing: [torch.float32 of size 57600 (cuda:0)]
        (3): Parameter containing: [torch.float32 of size 115200 (cuda:0)]
        (4): Parameter containing: [torch.float32 of size 6400 (cuda:0)]
    )
  )
  (fc2): LinearDecomMPO(
    (tensor_set): ParameterList(
        (0): Parameter containing: [torch.float32 of size 144 (cuda:0)]
        (1): Parameter containing: [torch.float32 of size 384 (cuda:0)]
        (2): Parameter containing: [torch.float32 of size 256 (cuda:0)]
        (3): Parameter containing: [torch.float32 of size 256 (cuda:0)]
        (4): Parameter containing: [torch.float32 of size 64 (cuda:0)]
    )
  )
)
10,843,098 total parameters.
Epoch [1/30]
Traceback (most recent call last):
  File "/home/huyiwen/CV/bilstm/distill.py", line 72, in <module>
    student_train(T_model, S_model, cfg, train_loader, test_loader)
  File "/home/huyiwen/CV/bilstm/student.py", line 116, in student_train
    s_outputs = S_model(texts)
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/huyiwen/CV/bilstm/models/lstm_mpo.py", line 202, in forward
    out = self.fc1(lstm_out)
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1518, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1527, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/huyiwen/CV/bilstm/models/linear_mpo.py", line 398, in forward
    res = F.linear(res, self.weight, self.bias)
  File "/home/huyiwen/CV/bilstm/models/linear_mpo.py", line 387, in weight
    return self.mpo.mpo2matrix(self.tensor_set).T
  File "/home/huyiwen/CV/bilstm/models/linear_mpo.py", line 287, in mpo2matrix
    t = torch.tensordot(t, tensor_set[i], ([len(t.shape)-1],[0]))
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/functional.py", line 1193, in tensordot
    return _VF.tensordot(a, b, dims_a, dims_b)  # type: ignore[attr-defined]
RuntimeError: contracted dimensions need to match, but first has size 3600 in dim 0 and second has size 57600 in dim 0