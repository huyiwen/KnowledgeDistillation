
加载数据...
tensor([[  101,  4205,  5472,  ...,     0,     0,     0],
        [  101,  2019,  4024,  ...,     0,     0,     0],
        [  101,  2045,  1005,  ...,     0,     0,     0],
        ...,
        [  101,  2035,  1996,  ...,     0,     0,     0],
        [  101, 11552,  2135,  ...,     0,     0,     0],
        [  101,  1037,  4121,  ...,     0,     0,     0]])
Time usage: 0:00:11
Some weights of the model checkpoint at /home/huyiwen/pretrained/bert-base-uncased-SST-2 were not used when initializing BertModel: ['classifier.bias', 'classifier.weight']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
BERT_Model(
  (bert): BertModel(
    (embeddings): BertEmbeddings(
      (word_embeddings): Embedding(30522, 768, padding_idx=0)
      (position_embeddings): Embedding(512, 768)
      (token_type_embeddings): Embedding(2, 768)
      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
      (dropout): Dropout(p=0.1, inplace=False)
    )
    (encoder): BertEncoder(
      (layer): ModuleList(
        (0-11): 12 x BertLayer(
          (attention): BertAttention(
            (self): BertSelfAttention(
              (query): Linear(in_features=768, out_features=768, bias=True)
              (key): Linear(in_features=768, out_features=768, bias=True)
              (value): Linear(in_features=768, out_features=768, bias=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
            (output): BertSelfOutput(
              (dense): Linear(in_features=768, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
          (intermediate): BertIntermediate(
            (dense): Linear(in_features=768, out_features=3072, bias=True)
            (intermediate_act_fn): GELUActivation()
          )
          (output): BertOutput(
            (dense): Linear(in_features=3072, out_features=768, bias=True)
            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (dropout): Dropout(p=0.1, inplace=False)
          )
        )
      )
    )
    (pooler): BertPooler(
      (dense): Linear(in_features=768, out_features=768, bias=True)
      (activation): Tanh()
    )
  )
  (fc): Linear(in_features=768, out_features=192, bias=True)
  (fc1): Linear(in_features=192, out_features=2, bias=True)
)
cuda
biLSTM(
  (Embedding): Embedding(30522, 300)
  (lstm): LSTM(300, 300, batch_first=True, bidirectional=True)
  (fc1): Linear(in_features=600, out_features=192, bias=True)
  (fc2): Linear(in_features=192, out_features=2, bias=True)
)
10,717,178 total parameters.
Epoch [1/30]
tensor([[  101,  2009,  3084,  ...,     0,     0,     0],
        [  101,  1996,  2034,  ...,     0,     0,     0],
        [  101,  1037, 21425,  ...,     0,     0,     0],
        ...,
        [  101,  2053,  2107,  ...,     0,     0,     0],
        [  101, 22808,  1997,  ...,     0,     0,     0],
        [  101,  4569,  1998,  ...,     0,     0,     0]]) tensor([0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0,
        0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0,
        1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1])
==> name Embedding.weight torch.Size([30522, 300]) tensor([[-2.9262e-05,  3.3261e-06, -1.2510e-05,  ...,  2.6411e-05,
          9.3781e-06, -2.2252e-05],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]], device='cuda:0')
==> name lstm.weight_ih_l0 torch.Size([1200, 300]) tensor([[-1.6675e-05, -1.2395e-04,  1.2947e-05,  ...,  2.6398e-05,
         -7.8243e-05, -3.9246e-06],
        [ 1.7894e-05,  2.1899e-05, -1.7055e-05,  ..., -1.9407e-06,
          2.9978e-05,  7.4290e-06],
        [-1.9433e-05, -4.1803e-05, -7.2696e-07,  ...,  1.3892e-05,
          1.0950e-06, -7.2214e-07],
        ...,
        [-1.1859e-05, -2.4304e-05, -4.5703e-06,  ...,  3.4159e-05,
         -4.0184e-05,  1.7461e-05],
        [ 3.7486e-05,  9.1287e-06, -3.0394e-05,  ...,  4.5073e-05,
          1.5995e-05,  2.1748e-05],
        [ 7.7779e-06,  1.6416e-05,  8.6093e-07,  ..., -8.8693e-08,
          4.1222e-06, -2.4020e-05]], device='cuda:0')
==> name lstm.weight_hh_l0 torch.Size([1200, 300]) tensor([[-3.7336e-06, -2.0494e-06,  4.5468e-06,  ..., -2.3412e-06,
          5.6244e-06,  6.9529e-06],
        [-2.5878e-06,  1.2885e-06, -5.6715e-06,  ..., -3.1671e-06,
         -3.8238e-06,  7.0945e-07],
        [ 8.8602e-07, -1.7575e-06,  3.7479e-07,  ..., -1.8463e-06,
         -8.4626e-07, -2.3475e-06],
        ...,
        [-5.9021e-06, -5.6931e-07, -4.9867e-06,  ..., -1.9351e-06,
          4.2306e-06, -1.9776e-06],
        [-2.2010e-06,  3.1025e-06,  7.8324e-08,  ...,  5.9722e-07,
          2.1278e-06,  3.9274e-06],
        [ 3.6668e-07,  3.8130e-06, -1.2545e-06,  ...,  3.4301e-06,
          4.1163e-06, -9.4094e-06]], device='cuda:0')
==> name lstm.bias_ih_l0 torch.Size([1200]) tensor([-3.3297e-05, -4.2846e-05, -1.7954e-06,  ..., -5.3846e-06,
        -1.3373e-05,  4.4864e-05], device='cuda:0')
==> name lstm.bias_hh_l0 torch.Size([1200]) tensor([-3.3297e-05, -4.2846e-05, -1.7954e-06,  ..., -5.3846e-06,
        -1.3373e-05,  4.4864e-05], device='cuda:0')
==> name lstm.weight_ih_l0_reverse torch.Size([1200, 300]) tensor([[ 2.7366e-05, -3.3096e-05,  7.1395e-06,  ...,  2.5695e-05,
          1.9459e-06, -1.1778e-05],
        [ 4.0687e-06,  7.5088e-05,  8.8975e-05,  ..., -7.3885e-05,
         -5.3952e-05, -3.6013e-05],
        [-3.8625e-06, -3.2122e-05, -3.6415e-05,  ...,  4.8187e-05,
         -3.0782e-05,  1.7536e-05],
        ...,
        [ 5.5659e-06, -2.1730e-05, -6.3470e-06,  ...,  2.4458e-05,
         -1.5605e-05, -8.4151e-06],
        [ 3.1863e-05,  8.4200e-06,  6.1444e-06,  ...,  1.9935e-05,
          1.7056e-05,  1.8474e-05],
        [ 1.8698e-05, -1.2767e-05, -2.4974e-05,  ..., -3.4304e-05,
         -5.9073e-05,  3.4120e-05]], device='cuda:0')
==> name lstm.weight_hh_l0_reverse torch.Size([1200, 300]) tensor([[-1.3184e-06,  3.5331e-06, -3.3625e-06,  ...,  2.1929e-06,
          1.5977e-06, -1.1688e-07],
        [-6.2862e-06, -5.6571e-06,  4.4191e-07,  ..., -9.4331e-06,
         -6.9160e-07,  1.1785e-06],
        [-1.2721e-06,  6.7328e-07,  1.4128e-06,  ..., -1.5895e-07,
         -3.1779e-07,  1.2732e-05],
        ...,
        [ 1.7936e-06,  1.9392e-06,  2.5891e-06,  ...,  2.0255e-06,
         -9.3464e-09, -3.8600e-06],
        [-2.9443e-06,  2.3512e-06, -2.4960e-07,  ...,  3.1394e-06,
          2.5342e-06, -3.4491e-06],
        [ 4.4323e-06, -5.3956e-06, -3.9798e-06,  ..., -1.3551e-06,
          9.7803e-06,  1.3611e-05]], device='cuda:0')
==> name lstm.bias_ih_l0_reverse torch.Size([1200]) tensor([-2.8508e-05,  1.6215e-05, -5.2606e-06,  ..., -5.0651e-06,
         1.9243e-05, -3.4533e-05], device='cuda:0')
==> name lstm.bias_hh_l0_reverse torch.Size([1200]) tensor([-2.8508e-05,  1.6215e-05, -5.2606e-06,  ..., -5.0651e-06,
         1.9243e-05, -3.4533e-05], device='cuda:0')
==> name fc1.weight torch.Size([192, 600]) tensor([[-6.1222e-04, -1.2122e-04, -2.4883e-04,  ..., -9.7706e-05,
         -1.1009e-04,  1.4417e-04],
        [-7.6041e-04, -1.8912e-04, -1.3293e-04,  ..., -7.7427e-05,
          1.9338e-04,  3.7533e-04],
        [ 2.4233e-05,  3.9308e-04, -3.0887e-04,  ...,  3.8933e-06,
         -6.0404e-05,  4.6579e-05],
        ...,
        [ 2.2092e-04,  1.7718e-04, -1.2586e-04,  ...,  1.0850e-04,
         -3.4027e-05,  1.1426e-05],
        [-7.8210e-05, -2.3422e-04, -1.1100e-04,  ...,  1.0322e-04,
          9.4698e-05,  2.3552e-04],
        [-2.9087e-04, -4.5295e-04,  2.4391e-05,  ...,  6.6775e-05,
          4.8996e-05,  5.0734e-05]], device='cuda:0')
==> name fc1.bias torch.Size([192]) tensor([ 5.6226e-04, -8.3838e-04,  2.1182e-03, -2.2384e-04, -6.7815e-04,
         2.1834e-04, -1.0497e-03,  1.5927e-04,  3.5988e-04,  1.2712e-03,
         3.1422e-03,  1.8132e-04,  7.2148e-04, -1.2059e-03, -3.1657e-04,
        -9.2604e-04,  6.8268e-04, -3.3557e-04, -9.3199e-05, -1.7811e-03,
        -7.5199e-04,  1.0350e-03,  1.6216e-03, -3.6291e-04,  5.6178e-04,
        -6.8055e-04,  1.7480e-03, -4.0759e-04,  2.9809e-04, -6.4658e-04,
        -1.3758e-04,  1.7868e-03, -2.5742e-03,  1.5758e-03, -9.4705e-04,
         5.6664e-04, -3.7312e-04,  8.2918e-04,  1.6207e-03, -4.7709e-04,
        -6.0320e-04,  6.7917e-04, -9.2833e-04,  2.0032e-04, -1.5557e-04,
         3.3028e-03, -2.9500e-04,  2.3483e-04, -6.9188e-04, -1.5995e-03,
         2.3309e-04,  3.3670e-03, -9.5246e-04,  9.9878e-04,  2.0571e-03,
         2.4971e-04, -2.5101e-03, -1.9184e-03, -3.7852e-04,  2.1922e-03,
        -1.4773e-04,  6.1039e-04, -1.7346e-04,  3.5857e-05, -5.3284e-04,
         1.7087e-03, -1.2520e-03, -9.6073e-04,  1.1754e-05, -8.6337e-04,
         1.2090e-04, -7.1399e-04, -1.0485e-03, -1.0953e-03, -1.7877e-03,
         1.5292e-03, -5.2487e-04, -9.6671e-04,  3.6639e-06, -2.8813e-04,
         2.1270e-03,  2.3279e-04, -1.4480e-04,  2.2699e-04,  2.2739e-04,
         2.1705e-04,  4.3080e-05, -5.3212e-04, -9.9161e-04, -1.8334e-04,
         1.8800e-03, -5.2364e-04, -1.5536e-03,  4.8151e-04, -1.3552e-03,
         4.1212e-04, -1.4631e-03,  2.8984e-04, -9.5717e-04, -1.2059e-04,
        -9.0790e-04, -1.1553e-03,  1.6405e-04,  8.3838e-04,  4.8298e-04,
        -7.7702e-04,  1.5311e-03,  2.2114e-03, -5.0622e-04, -8.4281e-04,
         9.9350e-05,  2.2083e-04, -2.7688e-04,  5.8869e-05,  5.6864e-04,
         8.0735e-04, -3.5500e-04, -8.0482e-04, -2.8249e-03,  2.6637e-04,
         4.7386e-04,  4.3225e-04,  3.7250e-04,  1.5984e-03,  9.0510e-05,
         2.5155e-03,  2.0997e-03, -1.6328e-04, -3.7548e-04,  1.5611e-07,
        -7.3706e-04,  3.7850e-04, -1.8924e-06, -2.4401e-04,  6.6921e-04,
        -1.0575e-03, -8.8469e-04,  1.7223e-03,  1.6766e-03,  4.1782e-04,
         7.7968e-05,  1.4380e-03, -4.0099e-04,  9.0340e-04,  9.5663e-04,
         9.0456e-04,  1.7577e-03, -2.9195e-04,  1.4660e-04,  9.6813e-04,
        -5.9849e-04, -2.3997e-04,  1.0621e-03,  1.3919e-03,  2.0983e-04,
        -1.6358e-05, -8.8070e-04, -1.0369e-03, -5.6056e-04,  1.0839e-03,
        -1.9759e-04, -1.1272e-03, -1.7065e-03, -5.6697e-04, -3.4022e-03,
        -1.1707e-04, -5.4513e-05, -2.2927e-03,  2.6006e-03, -9.4482e-04,
        -3.3527e-04,  1.3174e-04,  1.8242e-03, -2.6258e-04, -7.6088e-04,
        -7.5749e-06,  6.0920e-04, -2.2731e-03, -5.0994e-04, -1.0497e-03,
         5.7521e-06, -9.7125e-05,  1.7239e-03,  3.2278e-04,  1.9563e-04,
         6.1977e-04, -1.8846e-04,  1.6054e-03, -4.0660e-04,  4.7450e-04,
        -1.1165e-03, -2.5992e-03], device='cuda:0')
==> name fc2.weight torch.Size([2, 192]) tensor([[ 1.7879e-03, -4.1202e-04, -2.1791e-04, -7.3727e-04,  1.7946e-04,
          4.8238e-04, -2.0071e-03,  6.7500e-04, -5.3779e-04, -4.0945e-04,
         -2.6392e-03,  2.0022e-04,  2.3794e-03, -2.1262e-03, -7.5070e-04,
         -5.5976e-04, -1.3993e-03,  6.6398e-04, -2.8159e-03, -1.5120e-03,
         -4.9779e-04,  4.2740e-05,  9.9930e-04, -1.2094e-03, -2.0129e-03,
         -8.8216e-04, -1.6633e-03, -2.8212e-03,  6.3889e-04, -7.2198e-04,
          1.0110e-03, -1.2019e-04,  4.5017e-04,  2.5039e-04,  1.9362e-04,
         -4.7815e-06, -6.1127e-04, -2.5583e-03,  3.6804e-03, -1.1078e-03,
         -9.1065e-05,  8.0682e-05, -3.7936e-04, -1.0781e-03, -1.6828e-03,
         -1.1605e-03, -1.4576e-03, -8.6264e-04, -2.2924e-03, -1.1118e-03,
         -4.3894e-04, -1.2199e-03, -6.7209e-04,  2.8635e-03,  6.8026e-04,
         -1.8984e-03, -1.7025e-03, -7.6391e-04, -2.3677e-03, -1.5905e-03,
          1.6667e-03,  8.7365e-04, -6.4790e-04, -1.7849e-03, -7.8167e-04,
         -6.5100e-05, -1.7521e-03, -1.8528e-03,  2.0941e-03, -1.1530e-03,
         -7.2064e-04,  5.3780e-04, -1.0912e-03, -3.4117e-03,  9.3167e-04,
         -1.0794e-03, -3.1996e-03,  4.8885e-04, -1.3619e-03,  9.8990e-05,
          2.7476e-03, -9.3050e-06,  1.3290e-04,  2.6470e-04,  1.6701e-03,
          1.5050e-03, -1.0331e-03, -3.7589e-04, -2.1216e-03,  1.4595e-03,
          4.5562e-04, -8.7872e-05,  9.8735e-04,  9.0171e-04, -1.0505e-03,
         -1.0863e-03, -1.1471e-03,  6.2910e-05,  1.2930e-03, -2.2724e-05,
         -2.3723e-03, -2.8043e-03,  3.5108e-04, -2.2102e-03, -4.9466e-04,
          2.3494e-04, -1.2089e-03, -3.1345e-04, -3.2074e-04,  1.5090e-03,
          1.6277e-03, -1.1097e-03, -4.8228e-04, -1.4633e-05, -1.0873e-03,
         -1.0418e-03, -5.9683e-04,  4.3621e-05, -2.4141e-03,  9.2349e-04,
         -8.5254e-04, -6.2169e-04, -1.3683e-03, -1.1531e-03,  6.7771e-04,
          7.9125e-04, -9.7131e-04,  8.6021e-04, -1.7339e-03, -4.6574e-05,
         -2.7080e-03,  5.9197e-04, -1.2788e-04,  1.2279e-03, -1.2319e-03,
         -2.1349e-03, -2.7079e-03, -1.8478e-03, -1.7191e-03,  8.7790e-04,
          8.0337e-04, -3.1977e-03, -3.4166e-04,  1.8053e-03, -1.7161e-03,
         -1.3710e-03,  1.9466e-03, -2.1500e-03, -2.0574e-03, -1.8873e-03,
         -1.2536e-03, -1.4355e-03, -1.3824e-03, -3.3010e-04, -3.2285e-04,
          9.3988e-04,  9.5269e-04, -1.7340e-03,  6.0726e-04, -7.4714e-04,
          1.2354e-03, -9.8766e-04, -1.8522e-03, -1.3854e-03, -1.8945e-03,
          2.0072e-03, -2.6406e-04, -2.2931e-03,  2.0499e-03,  2.4298e-03,
          1.0827e-03,  2.1119e-04, -3.8032e-04, -1.2249e-03, -2.0009e-03,
          1.3886e-04, -1.6770e-04, -3.3605e-03,  4.7470e-04,  8.0897e-05,
         -6.8334e-04, -1.0976e-03, -3.0774e-04,  4.9955e-04, -3.1148e-03,
         -8.6201e-04, -1.4547e-03, -1.4840e-03,  1.5398e-03, -9.7668e-04,
         -4.7168e-03, -3.0252e-03],
        [-3.3862e-04, -2.4798e-03, -9.4974e-05,  3.5939e-03, -3.0549e-03,
         -9.6501e-04,  5.1605e-05, -4.8926e-04,  1.3200e-03,  2.0482e-03,
         -1.0741e-03,  1.7753e-03,  1.1571e-03,  2.1757e-03,  5.0867e-04,
          4.8363e-03,  1.2775e-03,  5.7188e-05,  4.3019e-04, -2.4323e-04,
         -7.6616e-04, -2.3951e-05,  3.1663e-03,  2.1331e-03,  1.2858e-03,
          2.8639e-03,  2.8198e-03,  7.0588e-04, -4.6493e-04, -1.0054e-03,
          2.1212e-04, -2.8470e-03,  3.2434e-03,  1.4555e-03,  1.2798e-03,
          1.8817e-03,  3.0302e-03,  3.0902e-03, -3.6872e-04,  6.2014e-04,
          1.5085e-03,  1.4414e-03,  2.8513e-03,  3.1408e-04,  1.5240e-03,
         -2.4643e-03, -1.5020e-04, -6.9982e-04,  1.7137e-03,  1.4804e-03,
         -1.7083e-04,  4.8464e-03, -6.1548e-03,  3.4118e-03, -1.9598e-03,
          9.9112e-04,  3.1902e-03,  2.7243e-03, -2.3882e-03,  5.1984e-03,
          6.4509e-04,  1.4631e-03,  1.0678e-03,  1.9861e-03, -1.7998e-03,
         -5.8933e-04,  2.3875e-03,  1.1027e-03,  5.3787e-05,  1.6540e-03,
          5.0364e-04,  1.4069e-03,  2.7224e-03, -1.0771e-03,  2.4728e-04,
          9.1989e-04,  2.4299e-03, -1.4258e-03,  4.0731e-03, -2.7414e-05,
          1.0029e-03, -1.1740e-03, -8.5796e-04,  2.3453e-04, -3.4133e-03,
         -7.3866e-04, -8.8398e-04, -2.3376e-04,  1.1347e-03,  1.0237e-03,
          2.7168e-03,  6.7578e-04,  2.7405e-03,  2.3939e-03,  1.9553e-03,
          8.7024e-04, -4.5636e-03, -1.3422e-03,  1.4116e-03,  1.6244e-03,
         -5.4993e-04, -5.4802e-05, -1.0632e-03,  1.2193e-03, -4.5191e-04,
         -3.0772e-04,  1.7902e-04,  4.5121e-03,  1.2392e-03,  4.0483e-04,
         -2.4519e-04,  6.5639e-04,  1.9619e-03,  9.0869e-04, -1.0817e-03,
          6.1588e-04,  3.3961e-03, -2.5266e-03,  7.9908e-04, -1.6668e-03,
          6.1220e-05, -1.1881e-03, -1.2198e-03,  1.5439e-03, -1.0079e-03,
          3.0711e-03,  3.1618e-03, -4.1840e-04,  2.7750e-06,  2.9047e-03,
          1.8240e-03,  1.2155e-03, -1.5911e-03, -2.3541e-03,  1.9289e-03,
          9.5083e-04,  3.2583e-03,  3.4183e-03, -1.2775e-03,  1.3142e-03,
          2.6831e-04, -6.9520e-04, -3.9194e-04,  2.7112e-03,  1.1826e-04,
          5.5439e-05,  1.5069e-03,  2.2979e-03,  1.5182e-03,  2.4701e-03,
          1.0646e-03, -5.6630e-05,  2.1681e-03,  3.6227e-03,  3.6477e-04,
          6.5558e-04,  1.1570e-03, -1.6519e-03,  1.3268e-03,  9.8197e-04,
          2.0600e-03,  1.4937e-03,  7.8636e-04,  5.3136e-04,  3.3823e-03,
         -1.6268e-03,  1.1460e-03,  1.7367e-03,  4.5674e-03,  1.9005e-03,
          1.3297e-03,  8.4268e-04,  2.3400e-03,  4.4879e-04,  1.7891e-03,
          2.5367e-04,  1.9117e-03,  5.4626e-04,  4.0413e-04,  3.0111e-04,
          1.4644e-03,  3.0637e-04,  1.5539e-03,  1.2403e-03,  1.3062e-03,
         -2.0083e-03,  3.9305e-04, -1.1966e-03,  1.0769e-03,  3.5024e-03,
          1.2179e-03,  8.3861e-04]], device='cuda:0')
==> name fc2.bias torch.Size([2]) tensor([-0.0211,  0.0211], device='cuda:0')
Iter:      0,  Train Loss:  0.24,  Train Acc: 48.44%,  Val Loss:  0.22,  Val Acc: 49.92%,  Time: 0:00:02 *,  LR: 0.09972609476841367
tensor([[  101,  2205, 10021,  ...,     0,     0,     0],
        [  101,  2065,  2017,  ...,     0,     0,     0],
        [  101,  4918, 15876,  ...,     0,     0,     0],
        ...,
        [  101, 12367,  8082,  ...,     0,     0,     0],
        [  101,  1037,  8242,  ...,     0,     0,     0],
        [  101,  2059,  2017,  ...,     0,     0,     0]]) tensor([0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0,
        1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1,
        0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1])
tensor([[  101,  2019, 12479,  ...,     0,     0,     0],
        [  101,  1996,  9904,  ...,     0,     0,     0],
        [  101,  1045,  7933,  ...,     0,     0,     0],
        ...,
        [  101,  2096,  3948,  ...,     0,     0,     0],
        [  101,  1037,  2444,  ...,     0,     0,     0],
        [  101,  1045,  1005,  ...,     0,     0,     0]]) tensor([1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1,
        1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,
        1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0])
tensor([[  101,  7324, 24490,  ...,     0,     0,     0],
        [  101,  1037,  5251,  ...,     0,     0,     0],
        [  101,  3432,  1998,  ...,     0,     0,     0],
        ...,
        [  101, 11014,  2000,  ...,     0,     0,     0],
        [  101,  2045,  1005,  ...,     0,     0,     0],
        [  101,  3571, 11089,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0,
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1,
        1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0])
tensor([[  101,  2096,  2009,  ...,     0,     0,     0],
        [  101,  2295,  1996,  ...,     0,     0,     0],
        [  101,  2028,  5683,  ...,     0,     0,     0],
        ...,
        [  101,  1037,  8100,  ...,     0,     0,     0],
        [  101,  2008,  2573,  ...,     0,     0,     0],
        [  101,  1037, 13433,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0,
        1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1,
        0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1])
tensor([[  101,  3256, 14291,  ...,     0,     0,     0],
        [  101,  2002,  8011,  ...,     0,     0,     0],
        [  101,  2023,  3040,  ...,     0,     0,     0],
        ...,
        [  101,  1996,  3606,  ...,     0,     0,     0],
        [  101,  2009, 28667,  ...,     0,     0,     0],
        [  101,  2172, 25670,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0,
        0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1])
tensor([[  101,  1037, 16465,  ...,     0,     0,     0],
        [  101,  5292, 19987,  ...,     0,     0,     0],
        [  101,  2066,  1996,  ...,     0,     0,     0],
        ...,
        [  101,  2630, 10188,  ...,     0,     0,     0],
        [  101,  1996,  2472,  ...,     0,     0,     0],
        [  101,  1996,  2972,  ...,     0,     0,     0]]) tensor([1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0,
        1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0])
tensor([[  101,  8064,  1011,  ...,     0,     0,     0],
        [  101, 14635,  5178,  ...,     0,     0,     0],
        [  101,  2130,  2083,  ...,     0,     0,     0],
        ...,
        [  101,  1996,  2895,  ...,     0,     0,     0],
        [  101, 14408, 21466,  ...,     0,     0,     0],
        [  101,  2066,  1037,  ...,     0,     0,     0]]) tensor([1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1,
        1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0])
tensor([[  101,  1037,  2542,  ...,     0,     0,     0],
        [  101,  8847,  3449,  ...,     0,     0,     0],
        [  101,  1037, 25723,  ...,     0,     0,     0],
        ...,
        [  101,  3356,  2225,  ...,     0,     0,     0],
        [  101,  2089,  3768,  ...,     0,     0,     0],
        [  101,  2009,  1005,  ...,     0,     0,     0]]) tensor([1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1,
        1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,
        0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1])
tensor([[  101,  2028,  1997,  ...,     0,     0,     0],
        [  101,  2061,  2172,  ...,     0,     0,     0],
        [  101,  2693,  2058,  ...,     0,     0,     0],
        ...,
        [  101, 13463,  1996,  ...,     0,     0,     0],
        [  101,  2017,  4088,  ...,     0,     0,     0],
        [  101,  2019, 11770,  ...,     0,     0,     0]]) tensor([1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0,
        1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1,
        1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1])
tensor([[  101,  2005,  1037,  ...,     0,     0,     0],
        [  101,  2035,  4038,  ...,     0,     0,     0],
        [  101,  1996,  3252,  ...,     0,     0,     0],
        ...,
        [  101, 20404,  1005,  ...,     0,     0,     0],
        [  101,  9020,  2000,  ...,     0,     0,     0],
        [  101,  2019, 23238,  ...,     0,     0,     0]]) tensor([0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1,
        0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1,
        0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0])
tensor([[  101,  2023,  2518,  ...,     0,     0,     0],
        [  101,  1996,  2878,  ...,     0,     0,     0],
        [  101,  2295,  3213,  ...,     0,     0,     0],
        ...,
        [  101,  2096, 11660,  ...,     0,     0,     0],
        [  101,  1037, 21794,  ...,     0,     0,     0],
        [  101,  1037,  2143,  ...,     0,     0,     0]]) tensor([0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0,
        1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1,
        0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0])
tensor([[  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  2009,  2003,  ...,     0,     0,     0],
        [  101,  2092,  1010,  ...,     0,     0,     0],
        ...,
        [  101, 10250,  2003,  ...,     0,     0,     0],
        [  101,  1996,  7221,  ...,     0,     0,     0],
        [  101,  1037,  4309,  ...,     0,     0,     0]]) tensor([0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,
        1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1,
        1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1])
tensor([[  101,  1011,  1048,  ...,     0,     0,     0],
        [  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  5251, 14742,  ...,     0,     0,     0],
        ...,
        [  101,  4606,  1010,  ...,     0,     0,     0],
        [  101, 12279,  2094,  ...,     0,     0,     0],
        [  101,  2021,  2027,  ...,     0,     0,     0]]) tensor([0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0,
        1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0,
        0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0])
tensor([[  101,  1037,  2210,  ...,     0,     0,     0],
        [  101,  1037, 15544,  ...,     0,     0,     0],
        [  101,  4575,  2175,  ...,     0,     0,     0],
        ...,
        [  101,  2028,  6187,  ...,     0,     0,     0],
        [  101,  2091, 19442,  ...,     0,     0,     0],
        [  101,  2009,  1005,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0,
        1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1,
        1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1])
tensor([[  101,  2011,  1996,  ...,     0,     0,     0],
        [  101,  2017,  2052,  ...,     0,     0,     0],
        [  101, 13970, 24769,  ...,     0,     0,     0],
        ...,
        [  101,  1037,  5199,  ...,     0,     0,     0],
        [  101,  2019,  7481,  ...,     0,     0,     0],
        [  101, 12164,  1005,  ...,     0,     0,     0]]) tensor([0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0,
        0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
        0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0])
tensor([[ 101, 2074, 2178,  ...,    0,    0,    0],
        [ 101, 2745, 5405,  ...,    0,    0,    0],
        [ 101, 6969, 1005,  ...,    0,    0,    0],
        ...,
        [ 101, 2054, 1005,  ...,    0,    0,    0],
        [ 101, 2019, 4895,  ...,    0,    0,    0],
        [ 101, 1996, 4871,  ...,    0,    0,    0]]) tensor([0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0,
        1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0])
tensor([[  101,  1996, 11084,  ...,     0,     0,     0],
        [  101,  1037,  4038,  ...,     0,     0,     0],
        [  101,  2004,  4654,  ...,     0,     0,     0],
        ...,
        [  101,  2009,  1005,  ...,     0,     0,     0],
        [  101, 14021,  2890,  ...,     0,     0,     0],
        [  101,  1037, 23624,  ...,     0,     0,     0]]) tensor([1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0,
        1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0,
        0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1])
tensor([[ 101, 2019, 5665,  ...,    0,    0,    0],
        [ 101, 2054, 3464,  ...,    0,    0,    0],
        [ 101, 1996, 3185,  ...,    0,    0,    0],
        ...,
        [ 101, 2491, 1011,  ...,    0,    0,    0],
        [ 101, 2009, 1005,  ...,    0,    0,    0],
        [ 101, 2017, 2089,  ...,    0,    0,    0]]) tensor([0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0,
        0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0,
        1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1])
tensor([[  101,  1011,  1048,  ...,     0,     0,     0],
        [  101,  2019, 27427,  ...,     0,     0,     0],
        [  101,  1037,  6532,  ...,     0,     0,     0],
        ...,
        [  101,  1996,  3185,  ...,     0,     0,     0],
        [  101, 26781, 15613,  ...,     0,     0,     0],
        [  101,  9742,  1010,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0,
        0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0,
        1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1])
tensor([[ 101, 1037, 2422,  ...,    0,    0,    0],
        [ 101, 2019, 2125,  ...,    0,    0,    0],
        [ 101, 1998, 1999,  ...,    0,    0,    0],
        ...,
        [ 101, 1012, 1012,  ...,    0,    0,    0],
        [ 101, 2087, 1997,  ...,    0,    0,    0],
        [ 101, 1996, 5889,  ...,    0,    0,    0]]) tensor([0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1,
        1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1,
        0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0])
tensor([[  101,  1996,  2143,  ...,     0,     0,     0],
        [  101, 10424,  7416,  ...,     0,     0,     0],
        [  101,  1037, 13433,  ...,     0,     0,     0],
        ...,
        [  101,  1011,  1048,  ...,     0,     0,     0],
        [  101,  2488,  2145,  ...,     0,     0,     0],
        [  101,  1037, 14408,  ...,     0,     0,     0]]) tensor([1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,
        1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1,
        0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1])
tensor([[ 101, 1996, 5436,  ...,    0,    0,    0],
        [ 101, 4850, 7534,  ...,    0,    0,    0],
        [ 101, 3811, 6749,  ...,    0,    0,    0],
        ...,
        [ 101, 1037, 3576,  ...,    0,    0,    0],
        [ 101, 2070, 1997,  ...,    0,    0,    0],
        [ 101, 2009, 1005,  ...,    0,    0,    0]]) tensor([0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0,
        0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0,
        0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1])
tensor([[  101,  1996,  3185,  ...,     0,     0,     0],
        [  101,  6187, 13469,  ...,     0,     0,     0],
        [  101,  3766,  9005,  ...,     0,     0,     0],
        ...,
        [  101,  2750,  2049,  ...,     0,     0,     0],
        [  101,  2412,  2156,  ...,     0,     0,     0],
        [  101,  2022, 11263,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0,
        1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0,
        1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0])
tensor([[  101,  2703,  6655,  ...,     0,     0,     0],
        [  101,  1012,  1012,  ...,     0,     0,     0],
        [  101,  1037,  2986,  ...,     0,     0,     0],
        ...,
        [  101,  2019,  6880,  ...,     0,     0,     0],
        [  101, 19240,  2015,  ...,     0,     0,     0],
        [  101,  1996,  3185,  ...,     0,     0,     0]]) tensor([0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1,
        0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1])
tensor([[  101,  8344, 17276,  ...,     0,     0,     0],
        [  101,  2058,  1998,  ...,     0,     0,     0],
        [  101,  2009,  1005,  ...,     0,     0,     0],
        ...,
        [  101,  2017, 24185,  ...,     0,     0,     0],
        [  101,  1037,  3376,  ...,     0,     0,     0],
        [  101,  1037,  5182,  ...,     0,     0,     0]]) tensor([1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0,
        1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0,
        0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1])
tensor([[ 101, 6135, 2058,  ...,    0,    0,    0],
        [ 101, 1996, 2143,  ...,    0,    0,    0],
        [ 101, 2009, 8509,  ...,    0,    0,    0],
        ...,
        [ 101, 2172, 1997,  ...,    0,    0,    0],
        [ 101, 2009, 1005,  ...,    0,    0,    0],
        [ 101, 1037, 2210,  ...,    0,    0,    0]]) tensor([0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
        0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0,
        1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0])
tensor([[  101,  2023, 16021,  ...,     0,     0,     0],
        [  101,  2763,  1996,  ...,     0,     0,     0],
        [  101,  2612,  1997,  ...,     0,     0,     0],
        ...,
        [  101,  2021,  2096,  ...,     0,     0,     0],
        [  101,  2065,  9410,  ...,     0,     0,     0],
        [  101, 17824,  2135,  ...,     0,     0,     0]]) tensor([0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1,
        1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1,
        1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1])
tensor([[  101, 13585,  4629,  ...,     0,     0,     0],
        [  101,  1996,  2143,  ...,     0,     0,     0],
        [  101, 13310,  8462,  ...,     0,     0,     0],
        ...,
        [  101,  2061,  2404,  ...,     0,     0,     0],
        [  101,  2009,  2003,  ...,     0,     0,     0],
        [  101,  1996,  4678,  ...,     0,     0,     0]]) tensor([1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1,
        1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0,
        0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1])
tensor([[  101,  3434,  2080,  ...,     0,     0,     0],
        [  101,  2009, 14087,  ...,     0,     0,     0],
        [  101,  2023,  3185,  ...,     0,     0,     0],
        ...,
        [  101,  1037, 12853,  ...,     0,     0,     0],
        [  101,  2009,  2038,  ...,     0,     0,     0],
        [  101,  1037,  6881,  ...,     0,     0,     0]]) tensor([0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1,
        0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1])
tensor([[  101,  1037,  7408,  ...,     0,     0,     0],
        [  101,  8467,  1010,  ...,     0,     0,     0],
        [  101,  1045,  2179,  ...,     0,     0,     0],
        ...,
        [  101,  1051, 14728,  ...,     0,     0,     0],
        [  101,  1996,  3185,  ...,     0,     0,     0],
        [  101, 15159, 28824,  ...,     0,     0,     0]]) tensor([0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1,
        1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0,
        1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0])
tensor([[  101,  3147,  1010,  ...,     0,     0,     0],
        [  101,  1996, 20445,  ...,     0,     0,     0],
        [  101,  3187,  2003,  ...,     0,     0,     0],
        ...,
        [  101,  2043,  1011,  ...,     0,     0,     0],
        [  101,  3849,  2066,  ...,     0,     0,     0],
        [  101,  2054,  1037,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0,
        0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0,
        1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1])
tensor([[  101,  4627,  2041,  ...,     0,     0,     0],
        [  101,  2012,  2320,  ...,     0,     0,     0],
        [  101,  2021,  2000,  ...,     0,     0,     0],
        ...,
        [  101, 19780, 29591,  ...,     0,     0,     0],
        [  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  2065,  2017,  ...,     0,     0,     0]]) tensor([0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1,
        0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0,
        0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1])
tensor([[  101,  1996,  2334,  ...,     0,     0,     0],
        [  101,  2064,  2022,  ...,     0,     0,     0],
        [  101,  8242,  2021,  ...,     0,     0,     0],
        ...,
        [  101, 12924,  1998,  ...,     0,     0,     0],
        [  101,  2190,  1997,  ...,     0,     0,     0],
        [  101,  3213,  1011,  ...,     0,     0,     0]]) tensor([0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
        1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1,
        0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0])
tensor([[  101, 16060,  2319,  ...,     0,     0,     0],
        [  101,  2023,  2518,  ...,     0,     0,     0],
        [  101,  2202,  2729,  ...,     0,     0,     0],
        ...,
        [  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  1996,  3772,  ...,     0,     0,     0],
        [  101, 17567,  2013,  ...,     0,     0,     0]]) tensor([1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0,
        1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0,
        1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0])
tensor([[  101,  2004, 24026,  ...,     0,     0,     0],
        [  101,  1996,  2143,  ...,     0,     0,     0],
        [  101,  2021,  2027,  ...,     0,     0,     0],
        ...,
        [  101,  4152,  2488,  ...,     0,     0,     0],
        [  101,  5121,  1996,  ...,     0,     0,     0],
        [  101,  2005,  1037,  ...,     0,     0,     0]]) tensor([1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
        1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1,
        0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0])
tensor([[  101,  1011,  1048,  ...,     0,     0,     0],
        [  101,  1037,  4086,  ...,     0,     0,     0],
        [  101,  1996,  2062,  ...,     0,     0,     0],
        ...,
        [  101,  1012,  1012,  ...,     0,     0,     0],
        [  101,  1037,  3637,  ...,     0,     0,     0],
        [  101,  1996, 10047,  ...,     0,     0,     0]]) tensor([1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1,
        0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1,
        1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1])
tensor([[  101,  2612,  1997,  ...,     0,     0,     0],
        [  101,  2004,  2019,  ...,     0,     0,     0],
        [  101,  1996,  6172,  ...,     0,     0,     0],
        ...,
        [  101,  2065,  2017,  ...,     0,     0,     0],
        [  101, 17595,  9805,  ...,     0,     0,     0],
        [  101,  2045,  2003,  ...,     0,     0,     0]]) tensor([0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0,
        1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,
        0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0])
tensor([[ 101, 2049, 2466,  ...,    0,    0,    0],
        [ 101, 2045, 1005,  ...,    0,    0,    0],
        [ 101, 2023, 2051,  ...,    0,    0,    0],
        ...,
        [ 101, 2027, 2074,  ...,    0,    0,    0],
        [ 101, 1996, 8740,  ...,    0,    0,    0],
        [ 101, 1998, 2009,  ...,    0,    0,    0]]) tensor([1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1,
        0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1,
        1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0])
tensor([[  101,  2045,  2003,  ...,     0,     0,     0],
        [  101,  2771,  3148,  ...,     0,     0,     0],
        [  101,  3432,  1037,  ...,     0,     0,     0],
        ...,
        [  101,  1996,  2069,  ...,     0,     0,     0],
        [  101, 16021, 16093,  ...,     0,     0,     0],
        [  101,  4931,  1010,  ...,     0,     0,     0]]) tensor([0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1,
        1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1,
        1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1])
tensor([[  101,  4522,  4200,  ...,     0,     0,     0],
        [  101, 14955,  6962,  ...,     0,     0,     0],
        [  101,  3087,  2040,  ...,     0,     0,     0],
        ...,
        [  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  2092,  1010,  ...,     0,     0,     0],
        [  101,  2037,  5688,  ...,     0,     0,     0]]) tensor([0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1,
        1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0,
        0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0])
tensor([[  101,  2178, 14036,  ...,     0,     0,     0],
        [  101,  2004,  5041,  ...,     0,     0,     0],
        [  101,  2035,  1999,  ...,     0,     0,     0],
        ...,
        [  101,  1996,  2143,  ...,     0,     0,     0],
        [  101,  3213,  1011,  ...,     0,     0,     0],
        [  101,  1011,  1048,  ...,     0,     0,     0]]) tensor([1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1,
        1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,
        0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1])
tensor([[  101, 10166,  1010,  ...,     0,     0,     0],
        [  101,  1996,  3459,  ...,     0,     0,     0],
        [  101,  3899,  4665,  ...,     0,     0,     0],
        ...,
        [  101,  2600,  5024,  ...,     0,     0,     0],
        [  101,  2019,  4654,  ...,     0,     0,     0],
        [  101,  2025,  2069,  ...,     0,     0,     0]]) tensor([1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1,
        0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1,
        1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0])
tensor([[  101,  2630, 10188,  ...,     0,     0,     0],
        [  101,  1996,  2143,  ...,     0,     0,     0],
        [  101,  2017,  2272,  ...,     0,     0,     0],
        ...,
        [  101,  2007,  5956,  ...,     0,     0,     0],
        [  101,  2115,  3983,  ...,     0,     0,     0],
        [  101,  4965,  2003,  ...,     0,     0,     0]]) tensor([0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0,
        1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1,
        0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1])
tensor([[  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  1996,  2312,  ...,     0,     0,     0],
        [  101,  2175,  4859,  ...,     0,     0,     0],
        ...,
        [  101,  2422,  1996,  ...,     0,     0,     0],
        [  101,  2474, 28431,  ...,     0,     0,     0],
        [  101, 14163, 14693,  ...,     0,     0,     0]]) tensor([0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1])
tensor([[  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  1996,  3376,  ...,     0,     0,     0],
        [  101,  1037,  2621,  ...,     0,     0,     0],
        ...,
        [  101,  2019, 16655,  ...,     0,     0,     0],
        [  101,  4107,  1037,  ...,     0,     0,     0],
        [  101,  2023,  2003,  ...,     0,     0,     0]]) tensor([0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,
        0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0,
        1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1])
tensor([[  101,  1037, 11084,  ...,     0,     0,     0],
        [  101,  2130,  2488,  ...,     0,     0,     0],
        [  101,  3147,  1010,  ...,     0,     0,     0],
        ...,
        [  101,  7010, 20081,  ...,     0,     0,     0],
        [  101,  1037,  2143,  ...,     0,     0,     0],
        [  101,  2045,  1005,  ...,     0,     0,     0]]) tensor([1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1,
        1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1,
        1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0])
tensor([[  101,  2053,  1010,  ...,     0,     0,     0],
        [  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  9223,  1010,  ...,     0,     0,     0],
        ...,
        [  101,  1037, 13554,  ...,     0,     0,     0],
        [  101, 25591,  1010,  ...,     0,     0,     0],
        [  101,  2028,  1997,  ...,     0,     0,     0]]) tensor([1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,
        1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1,
        1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1])
tensor([[  101, 14477, 28878,  ...,     0,     0,     0],
        [  101,  2012,  9080,  ...,     0,     0,     0],
        [  101,  1037, 18414,  ...,     0,     0,     0],
        ...,
        [  101,  2023,  2003,  ...,     0,     0,     0],
        [  101,  1012,  1012,  ...,     0,     0,     0],
        [  101,  2009,  7266,  ...,     0,     0,     0]]) tensor([0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,
        1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0,
        0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0])
tensor([[ 101, 3087, 2025,  ...,    0,    0,    0],
        [ 101, 2009, 2003,  ...,    0,    0,    0],
        [ 101, 2019, 8796,  ...,    0,    0,    0],
        ...,
        [ 101, 6157, 1005,  ...,    0,    0,    0],
        [ 101, 2009, 3504,  ...,    0,    0,    0],
        [ 101, 2011, 2025,  ...,    0,    0,    0]]) tensor([0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1,
        1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0,
        1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1])
tensor([[  101,  2007,  2062,  ...,     0,     0,     0],
        [  101,  2009,  5121,  ...,     0,     0,     0],
        [  101, 22132,  7847,  ...,     0,     0,     0],
        ...,
        [  101, 14008, 21232,  ...,     0,     0,     0],
        [  101,  2025,  2069,  ...,     0,     0,     0],
        [  101,  4895, 10371,  ...,     0,     0,     0]]) tensor([0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1,
        1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0,
        1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1])
==> name Embedding.weight torch.Size([30522, 300]) tensor([[ 1.1546e-04,  6.3025e-05,  8.7543e-05,  ..., -2.8218e-05,
          9.9314e-05, -6.8646e-05],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]], device='cuda:0')
==> name lstm.weight_ih_l0 torch.Size([1200, 300]) tensor([[-1.8297e-05,  2.1501e-05,  1.0642e-05,  ..., -2.2662e-05,
          1.0035e-05, -2.6639e-05],
        [ 2.9095e-06,  2.7414e-05,  5.2857e-06,  ...,  3.4347e-05,
          1.1938e-05,  2.0529e-05],
        [ 2.8004e-05, -6.0670e-06,  2.1094e-05,  ..., -1.0011e-05,
         -1.8617e-05, -2.0973e-05],
        ...,
        [ 2.3475e-05,  2.5869e-05,  5.7992e-05,  ...,  2.9714e-05,
         -1.1877e-04, -5.1104e-05],
        [-2.0079e-05,  9.3947e-06,  2.6430e-05,  ..., -2.0558e-06,
         -3.5285e-05, -2.4634e-05],
        [ 1.9693e-05, -2.1341e-05, -1.1982e-05,  ..., -3.1727e-05,
          2.6398e-05,  9.8687e-06]], device='cuda:0')
==> name lstm.weight_hh_l0 torch.Size([1200, 300]) tensor([[ 2.6894e-06, -3.8036e-06, -2.8001e-06,  ..., -5.1473e-06,
         -2.3620e-06,  1.4668e-06],
        [-3.5979e-07,  2.4150e-06,  8.4119e-07,  ..., -3.0992e-06,
         -4.6178e-06, -4.2007e-06],
        [ 2.3696e-06,  6.4296e-07, -3.9288e-07,  ..., -5.1344e-06,
         -1.8267e-06,  1.4292e-06],
        ...,
        [ 8.8384e-07, -5.1411e-06, -4.0572e-07,  ..., -1.9045e-05,
         -1.2381e-05,  5.5380e-06],
        [-2.2463e-06, -8.7329e-06,  3.6657e-06,  ..., -4.5130e-06,
         -2.7725e-06, -7.3755e-07],
        [ 1.5135e-06, -3.6328e-06,  2.4109e-06,  ..., -1.2456e-06,
          3.4713e-07,  9.5322e-07]], device='cuda:0')
==> name lstm.bias_ih_l0 torch.Size([1200]) tensor([-2.1571e-05, -2.1989e-06, -1.8279e-06,  ..., -7.1072e-05,
        -3.8227e-05,  6.5452e-06], device='cuda:0')
==> name lstm.bias_hh_l0 torch.Size([1200]) tensor([-2.1571e-05, -2.1989e-06, -1.8279e-06,  ..., -7.1072e-05,
        -3.8227e-05,  6.5452e-06], device='cuda:0')
==> name lstm.weight_ih_l0_reverse torch.Size([1200, 300]) tensor([[-5.3902e-07, -4.6028e-06,  1.1965e-05,  ...,  1.4452e-05,
         -2.6342e-05, -2.1803e-05],
        [-4.0070e-05,  1.8753e-05, -5.1039e-05,  ..., -2.0678e-05,
          5.5908e-05,  3.6941e-05],
        [ 3.0217e-06, -3.6720e-05, -4.7428e-05,  ..., -3.1174e-05,
          7.4887e-05,  2.6239e-05],
        ...,
        [-2.0097e-05,  2.1356e-05,  2.3113e-05,  ...,  1.2405e-05,
         -2.8088e-05,  2.7540e-06],
        [ 1.0085e-05, -2.8828e-06,  1.9519e-06,  ...,  6.5654e-06,
         -7.9582e-06, -1.9005e-05],
        [ 1.2935e-05,  6.6577e-06, -1.6476e-05,  ...,  1.7937e-05,
          1.6394e-05, -9.5780e-06]], device='cuda:0')
==> name lstm.weight_hh_l0_reverse torch.Size([1200, 300]) tensor([[-4.5177e-06,  1.4935e-06, -8.3350e-06,  ..., -1.0834e-06,
         -3.5004e-06, -1.0493e-06],
        [ 8.8036e-06, -3.6186e-06,  2.1784e-05,  ...,  7.1228e-06,
          1.0212e-06, -2.1160e-06],
        [ 6.2634e-06, -6.7340e-06,  1.5030e-05,  ...,  3.2451e-06,
         -3.5957e-06,  1.8079e-06],
        ...,
        [-3.2027e-06,  5.4035e-06, -7.0589e-06,  ..., -4.5184e-06,
         -2.1082e-06,  2.9536e-06],
        [-9.2809e-07,  2.5460e-07, -5.4533e-06,  ..., -1.4047e-06,
         -8.2960e-07, -1.3588e-06],
        [ 2.5294e-06, -2.2628e-06,  2.2403e-06,  ..., -7.1045e-06,
          2.5107e-06,  6.5243e-06]], device='cuda:0')
==> name lstm.bias_ih_l0_reverse torch.Size([1200]) tensor([-1.1450e-05,  6.3979e-05,  9.2776e-06,  ..., -2.9336e-05,
        -1.2464e-05, -7.4529e-06], device='cuda:0')
==> name lstm.bias_hh_l0_reverse torch.Size([1200]) tensor([-1.1450e-05,  6.3979e-05,  9.2776e-06,  ..., -2.9336e-05,
        -1.2464e-05, -7.4529e-06], device='cuda:0')
==> name fc1.weight torch.Size([192, 600]) tensor([[-1.1010e-04, -1.8075e-04, -1.9529e-04,  ..., -3.0511e-04,
         -2.4335e-04,  3.3087e-05],
        [-5.8391e-05, -2.1330e-04, -2.0089e-04,  ..., -3.9122e-04,
         -3.1301e-04,  1.4455e-04],
        [ 1.4331e-06,  1.2751e-06, -4.5405e-06,  ..., -3.3707e-06,
         -5.8640e-06,  3.5000e-07],
        ...,
        [-7.4838e-05,  2.4290e-04,  1.3194e-05,  ...,  1.5867e-04,
          9.5738e-05, -8.4595e-05],
        [ 2.2978e-04,  8.3920e-05, -4.0990e-05,  ...,  3.7690e-05,
          6.1219e-05, -7.8387e-05],
        [-1.9074e-04,  1.9447e-04, -4.0840e-04,  ..., -4.9885e-04,
         -3.5497e-04,  1.4608e-04]], device='cuda:0')
==> name fc1.bias torch.Size([192]) tensor([-2.7176e-03, -2.9990e-03, -1.6332e-05, -5.3101e-04,  1.4016e-03,
        -1.7319e-03, -7.1334e-04,  2.1843e-03,  1.7600e-03,  1.1260e-03,
        -1.1652e-03,  1.5197e-03, -5.8324e-04, -7.4166e-04,  2.9801e-05,
        -1.0933e-03,  1.7635e-03,  1.0403e-04, -9.6691e-04, -2.5965e-03,
        -3.8538e-03,  3.3879e-03,  1.3298e-03, -1.0715e-04, -2.6856e-03,
         1.5991e-03,  1.3655e-04, -1.6181e-03, -1.2674e-04,  1.4012e-04,
        -1.0778e-03,  2.4400e-03,  7.2478e-04,  1.3185e-03, -6.3423e-05,
         3.6180e-05, -9.4691e-04,  1.0256e-03,  4.3059e-04, -9.1280e-04,
        -4.5525e-04,  2.7186e-05, -3.6068e-04, -7.0286e-05, -8.9666e-04,
        -3.9099e-04, -2.4032e-03, -4.7433e-04, -7.6003e-04, -1.6100e-03,
         1.6508e-03,  3.3638e-03, -1.5118e-05,  2.3151e-03, -5.3118e-03,
         5.6963e-04,  5.2418e-05, -3.6589e-03, -9.6916e-05,  1.8902e-03,
         2.7040e-04,  1.1590e-03, -1.3542e-03, -2.3538e-04, -1.3724e-04,
         2.3638e-03, -1.3078e-03, -6.3935e-04, -1.1111e-03, -1.3541e-03,
         2.6866e-03,  7.0643e-06,  1.3829e-04,  3.6114e-04, -2.5882e-03,
         1.9169e-04, -6.0960e-05,  1.2682e-04,  1.5521e-03, -3.3358e-04,
        -1.0964e-03, -1.6271e-06, -9.6327e-04, -1.5627e-04,  2.5673e-03,
         1.1853e-04, -8.0325e-05,  8.8267e-04, -1.6122e-03, -2.3440e-04,
         9.9751e-04,  1.6716e-03, -9.5060e-04,  1.6627e-04, -1.1338e-03,
         1.1055e-03,  1.8912e-03, -1.5731e-03,  7.3606e-04,  4.8500e-05,
        -2.1091e-03, -8.5101e-04,  1.5231e-03, -1.3362e-04, -9.6238e-04,
         1.7687e-03,  1.9102e-03,  5.7345e-04,  1.4181e-03,  3.4539e-03,
        -2.6552e-03, -7.0780e-04,  1.1079e-03,  1.7517e-04, -5.0912e-04,
        -2.4399e-05, -4.8045e-04,  1.1885e-03, -1.2231e-03, -7.7524e-05,
        -4.7197e-03, -6.8837e-04, -3.4571e-04,  8.8212e-04,  1.2946e-03,
         4.6304e-04,  1.1545e-03, -2.3077e-03, -4.3671e-04,  6.2552e-04,
        -1.9792e-03,  1.9688e-05, -8.7819e-04,  5.5562e-04, -7.3295e-04,
        -1.0614e-03, -8.8126e-04, -3.8436e-04,  1.7047e-03,  4.0936e-03,
         4.0152e-03,  3.6196e-03,  9.9138e-04, -5.1757e-04,  6.0789e-04,
         5.6851e-04,  1.9534e-04, -1.1461e-03,  1.9119e-04,  1.8533e-03,
        -9.2190e-04,  2.9768e-05,  1.0470e-04,  1.6749e-03, -9.0594e-04,
         8.5047e-04, -1.4540e-03, -4.2982e-03, -4.7126e-04,  4.7030e-04,
        -1.3819e-03,  2.4440e-05, -2.6832e-03, -2.1578e-03, -7.6209e-04,
        -2.2124e-05,  1.8991e-03, -6.0538e-05,  1.9453e-03,  2.3653e-03,
        -1.9362e-05,  3.5190e-04,  1.3390e-03, -2.8239e-04,  1.1534e-03,
         5.1145e-04,  8.3874e-04, -1.3005e-03, -1.6256e-03, -9.0962e-04,
         9.6529e-04,  5.8910e-04,  7.3079e-04,  4.8588e-04, -2.8258e-04,
         1.3529e-05,  2.5567e-03,  6.9016e-04, -1.5866e-03,  1.6347e-03,
        -2.9682e-04, -1.7689e-03], device='cuda:0')
==> name fc2.weight torch.Size([2, 192]) tensor([[-3.7416e-03, -4.1605e-03, -2.0910e-03, -6.7502e-04, -1.6233e-03,
         -7.7164e-04,  7.2637e-04, -1.9473e-03, -1.2020e-03, -4.3056e-04,
         -2.6852e-03, -9.9108e-04, -1.6800e-03, -2.9830e-04, -7.3689e-03,
         -3.2660e-04, -4.6945e-03,  4.8457e-04, -4.6358e-04, -3.8099e-03,
         -3.7305e-03, -6.8661e-04, -2.6249e-04, -1.5326e-03, -2.5914e-03,
         -4.1620e-03,  7.2555e-04, -3.0397e-03, -1.0292e-04, -1.3900e-03,
         -1.6875e-03, -8.3526e-04, -2.6950e-03, -4.2090e-04, -2.9933e-04,
          4.6385e-04,  1.0938e-03, -2.6481e-03, -8.0591e-04, -4.7871e-04,
         -1.4357e-04,  1.0928e-03, -3.2340e-03, -2.0386e-03, -1.2928e-03,
          8.5871e-04, -5.7489e-04, -3.8006e-05, -6.3974e-04, -3.5117e-03,
         -2.1218e-03, -1.9452e-03, -1.3592e-03,  3.2834e-04, -3.7439e-03,
         -6.1332e-04,  3.4041e-03, -1.0928e-03, -1.3274e-03,  1.5842e-04,
         -2.2580e-03, -4.7081e-04, -4.6786e-03, -1.8618e-03, -1.6417e-03,
         -2.0186e-03, -3.3690e-03, -4.0221e-03, -1.2437e-03, -3.7597e-04,
         -3.7659e-04, -4.0107e-04, -2.2929e-03, -1.1048e-03, -1.0810e-03,
         -1.0179e-03, -9.2767e-04,  2.0742e-04, -6.0658e-04,  3.7202e-04,
         -2.0868e-03,  3.2644e-04, -3.4043e-04, -2.2342e-03, -1.3885e-04,
          1.1400e-04, -3.2126e-03,  9.8019e-04, -1.8438e-03, -1.5577e-03,
          5.5539e-05, -1.3100e-03, -1.3845e-03, -1.4497e-03, -5.2689e-04,
         -4.0461e-03, -1.9185e-03, -2.0107e-03, -4.1540e-04,  8.5781e-04,
         -9.2231e-03, -3.9447e-03, -2.0466e-03, -4.9440e-04,  6.3581e-04,
         -3.0856e-03, -2.2742e-03, -1.5485e-03, -1.8916e-03, -2.1531e-03,
          1.2196e-03,  1.2386e-03, -1.8041e-03,  9.1418e-05, -3.3577e-04,
         -3.0703e-04, -6.9283e-03, -9.2767e-04, -2.5621e-03, -7.8519e-04,
         -2.7880e-03,  2.6416e-04, -3.4738e-03, -3.0643e-04, -4.9275e-03,
          9.8948e-04, -1.5978e-03, -1.4870e-03,  4.7298e-04, -3.0492e-03,
         -6.7416e-04, -3.7639e-04, -3.5419e-03, -1.0386e-03, -3.1124e-03,
         -2.6218e-03, -1.7733e-03, -5.7873e-04, -1.8055e-03, -2.1338e-03,
         -1.4789e-03, -1.6999e-03,  9.0266e-04, -3.8243e-03, -3.7152e-03,
         -1.2688e-03, -7.5698e-04, -3.0193e-03,  1.1331e-03, -9.7551e-04,
         -2.8120e-03, -1.2491e-03,  1.8801e-03, -3.7411e-03, -8.9256e-04,
          1.0292e-04, -1.7811e-03, -2.1659e-03,  1.4354e-03, -4.2071e-04,
         -7.8897e-04,  4.5572e-06,  3.0529e-03, -3.3289e-03, -4.6545e-03,
         -3.6897e-03, -8.5403e-04,  8.9322e-04, -3.0997e-03, -1.2513e-03,
         -4.5308e-04, -1.4317e-04, -1.8827e-03, -1.0824e-03, -5.3829e-03,
         -4.5388e-04, -2.5618e-04, -1.7028e-03, -2.6659e-03, -4.5752e-04,
         -1.6505e-03, -1.4737e-03,  1.5454e-03, -1.0706e-03, -1.3010e-03,
          1.1791e-03, -5.3898e-05, -1.0536e-03, -1.4030e-03, -2.0872e-03,
         -2.7408e-03, -3.8605e-03],
        [ 8.1174e-03,  6.8539e-04,  0.0000e+00,  1.0277e-03,  0.0000e+00,
          3.2965e-03,  0.0000e+00,  3.3598e-04,  0.0000e+00,  0.0000e+00,
          1.2590e-03,  7.9269e-03,  0.0000e+00,  2.3613e-03,  3.3805e-03,
          2.4207e-04,  2.9175e-03,  0.0000e+00,  1.1316e-04,  2.3733e-03,
          1.2757e-03,  4.7016e-03,  5.1714e-03,  0.0000e+00,  6.6130e-04,
          0.0000e+00,  5.2963e-05,  2.1414e-04,  3.8777e-03,  0.0000e+00,
          6.5806e-05,  1.3108e-03,  1.6678e-04,  2.8004e-04,  0.0000e+00,
          0.0000e+00,  8.5652e-04,  0.0000e+00,  1.7445e-05, -1.4135e-04,
          0.0000e+00,  0.0000e+00,  2.7843e-03,  1.2599e-04,  0.0000e+00,
          0.0000e+00,  1.6832e-03,  1.8583e-04,  5.3046e-04,  1.2377e-04,
          1.7447e-03,  4.6733e-03,  3.4847e-03,  4.8889e-03,  5.7536e-04,
          0.0000e+00,  1.0924e-04,  4.8596e-04,  0.0000e+00,  1.6798e-03,
          2.5896e-03,  5.6528e-03,  4.0331e-03,  6.6285e-05,  4.0253e-04,
          6.0707e-04,  2.1261e-03,  3.7339e-03,  2.7235e-03,  1.3711e-04,
          2.5722e-03,  4.2255e-04,  0.0000e+00,  1.3725e-04,  1.5028e-03,
          0.0000e+00,  0.0000e+00,  3.1555e-04,  9.1679e-03,  0.0000e+00,
          1.4388e-03,  0.0000e+00,  0.0000e+00,  7.1585e-05,  1.7541e-03,
          4.1776e-03,  9.3123e-04,  3.2188e-04,  4.8230e-04,  5.3182e-03,
          5.0648e-04,  0.0000e+00,  5.2112e-04,  1.0413e-04,  1.5450e-04,
          4.9346e-04,  2.1682e-03,  1.6527e-04,  4.3508e-03,  1.8074e-04,
          4.6826e-03,  7.4433e-03,  8.9770e-04,  3.3421e-04,  1.7240e-04,
          4.3438e-03,  3.7186e-03,  1.2973e-03,  1.4689e-04,  3.7754e-03,
          2.4638e-03,  0.0000e+00,  0.0000e+00,  1.6459e-03,  2.0709e-04,
          2.0760e-04,  8.6476e-06,  6.1062e-03,  0.0000e+00,  0.0000e+00,
          3.3106e-03,  0.0000e+00,  7.9682e-04,  3.9052e-04,  1.1786e-02,
          6.9594e-04,  6.6594e-04,  4.6141e-03,  0.0000e+00,  3.5135e-03,
          1.9523e-03,  0.0000e+00,  7.5183e-05,  6.6043e-04,  3.9158e-03,
          1.6694e-03,  1.1272e-04,  6.2795e-04,  1.9521e-04,  1.0171e-02,
          1.9853e-03,  1.9279e-03,  0.0000e+00,  3.2537e-04,  2.3961e-03,
          8.4944e-05,  4.4297e-04,  1.5774e-04,  0.0000e+00,  2.2187e-03,
          3.5161e-05,  0.0000e+00,  1.4989e-04,  6.2261e-03,  2.1929e-03,
          1.8811e-04,  3.4970e-04,  3.8439e-03,  0.0000e+00,  1.0993e-05,
          8.5776e-04,  0.0000e+00,  2.4594e-03,  7.4263e-03,  0.0000e+00,
          2.1443e-04,  5.9690e-03,  2.2907e-04,  3.2647e-03,  8.1313e-03,
          2.5435e-05,  9.6207e-05,  0.0000e+00,  2.3830e-04,  0.0000e+00,
          1.2697e-04,  3.1354e-03,  0.0000e+00,  4.0869e-03,  4.1324e-03,
          5.4729e-03,  3.1210e-03,  0.0000e+00,  3.2648e-03,  2.7207e-05,
          0.0000e+00,  3.4313e-03,  0.0000e+00,  5.1545e-03,  5.6873e-03,
          0.0000e+00,  1.2892e-04]], device='cuda:0')
==> name fc2.bias torch.Size([2]) tensor([-0.0437,  0.0437], device='cuda:0')
Traceback (most recent call last):
  File "/home/huyiwen/CV/bilstm/distill.py", line 71, in <module>
    student_train(T_model, S_model, cfg, train_loader, test_loader)
  File "/home/huyiwen/CV/bilstm/student.py", line 141, in student_train
    torch.save(S_model.state_dict(), config.student_save_path)
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/serialization.py", line 619, in save
    _save(obj, opened_zipfile, pickle_module, pickle_protocol, _disable_byteorder_record)
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/serialization.py", line 850, in _save
    storage = storage.cpu()
  File "/home/huyiwen/miniconda3/envs/kd/lib/python3.10/site-packages/torch/storage.py", line 134, in cpu
    return torch.UntypedStorage(self.size()).copy_(self, False)
KeyboardInterrupt
tensor([[ 101, 2025, 2144,  ...,    0,    0,    0],
        [ 101, 1045, 2031,  ...,    0,    0,    0],
        [ 101, 1996, 2143,  ...,    0,    0,    0],
        ...,
        [ 101, 3957, 3071,  ...,    0,    0,    0],
        [ 101, 2070, 2303,  ...,    0,    0,    0],
        [ 101, 2241, 2006,  ...,    0,    0,    0]]) tensor([1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1,
        0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1,
        1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1])
tensor([[  101,  3046,  2004,  ...,     0,     0,     0],
        [  101,  2009,  2089,  ...,     0,     0,     0],
        [  101, 12090,  2135,  ...,     0,     0,     0],
        ...,
        [  101,  2021,  3612,  ...,     0,     0,     0],
        [  101,  2995,  2000,  ...,     0,     0,     0],
        [  101,  1012,  1012,  ...,     0,     0,     0]]) tensor([1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0,
        0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0,
        1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1])
tensor([[  101,  1045,  4669,  ...,     0,     0,     0],
        [  101,  2000,  2022,  ...,     0,     0,     0],
        [  101,  1996,  2069,  ...,     0,     0,     0],
        ...,
        [  101,  1037, 12391,  ...,     0,     0,     0],
        [  101,  2055,  2004,  ...,     0,     0,     0],
        [  101,  1999,  2090,  ...,     0,     0,     0]]) tensor([1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0,
        0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1,
        1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0])
tensor([[  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  2044,  2035,  ...,     0,     0,     0],
        [  101,  1996,  5260,  ...,     0,     0,     0],
        ...,
        [  101,  2000,  3857,  ...,     0,     0,     0],
        [  101,  2172,  1997,  ...,     0,     0,     0],
        [  101,  2019, 27776,  ...,     0,     0,     0]]) tensor([1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1,
        0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1])
tensor([[  101,  2045,  2003,  ...,     0,     0,     0],
        [  101,  1037, 12038,  ...,     0,     0,     0],
        [  101,  4283,  2000,  ...,     0,     0,     0],
        ...,
        [  101,  2053, 20096,  ...,     0,     0,     0],
        [  101,  2307,  8626,  ...,     0,     0,     0],
        [  101,  1996,  2143,  ...,     0,     0,     0]]) tensor([1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0,
        0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0,
        1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1])
tensor([[  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  2096,  1996,  ...,     0,     0,     0],
        [  101,  4152, 22132,  ...,     0,     0,     0],
        ...,
        [  101, 18993,  1998,  ...,     0,     0,     0],
        [  101,  8945, 12096,  ...,     0,     0,     0],
        [  101,  1999,  1037,  ...,     0,     0,     0]]) tensor([0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
        0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1,
        1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0])
tensor([[  101,  2205,  6047,  ...,     0,     0,     0],
        [  101,  1996,  2143,  ...,     0,     0,     0],
        [  101,  2004,  1037,  ...,     0,     0,     0],
        ...,
        [  101,  2004, 20029,  ...,     0,     0,     0],
        [  101,  5436,  3238,  ...,     0,     0,     0],
        [  101,  4463,  6986,  ...,     0,     0,     0]]) tensor([0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0,
        0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1,
        1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1])
tensor([[ 101, 1012, 1012,  ...,    0,    0,    0],
        [ 101, 1037, 3458,  ...,    0,    0,    0],
        [ 101, 2053, 4788,  ...,    0,    0,    0],
        ...,
        [ 101, 2019, 6151,  ...,    0,    0,    0],
        [ 101, 3213, 1032,  ...,    0,    0,    0],
        [ 101, 1996, 3665,  ...,    0,    0,    0]]) tensor([0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0,
        1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0,
        1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0])
tensor([[  101,  2009,  1005,  ...,     0,     0,     0],
        [  101, 15107, 18074,  ...,     0,     0,     0],
        [  101,  1012,  1012,  ...,     0,     0,     0],
        ...,
        [  101,  1037, 16267,  ...,     0,     0,     0],
        [  101,  2612,  1997,  ...,     0,     0,     0],
        [  101,  1037,  6919,  ...,     0,     0,     0]]) tensor([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1,
        0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1,
        1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1])
tensor([[  101,  2022,  6072,  ...,     0,     0,     0],
        [  101,  2065,  1996,  ...,     0,     0,     0],
        [  101,  2096,  5121,  ...,     0,     0,     0],
        ...,
        [  101,  1996, 19240,  ...,     0,     0,     0],
        [  101,  1996, 12849,  ...,     0,     0,     0],
        [  101,  4297,  5644,  ...,     0,     0,     0]]) tensor([1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1,
        1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0,
        1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0])
tensor([[  101,  2008, 10424,  ...,     0,     0,     0],
        [  101,  1012,  1012,  ...,     0,     0,     0],
        [  101,  2004,  2019,  ...,     0,     0,     0],
        ...,
        [  101,  2053, 29297,  ...,     0,     0,     0],
        [  101,  1999,  5737,  ...,     0,     0,     0],
        [  101,  2062,  6916,  ...,     0,     0,     0]]) tensor([0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1,
        1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1,
        0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1])
tensor([[  101,  4627,  2041,  ...,     0,     0,     0],
        [  101,  1037,  2787,  ...,     0,     0,     0],
        [  101,  2019, 24256,  ...,     0,     0,     0],
        ...,
        [  101,  2035,  1996,  ...,     0,     0,     0],
        [  101,  2023, 18856,  ...,     0,     0,     0],
        [  101,  1037, 11259,  ...,     0,     0,     0]]) tensor([0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,
        0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0,
        1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1])
tensor([[  101,  2172,  1997,  ...,     0,     0,     0],
        [  101, 18628, 11714,  ...,     0,     0,     0],
        [  101,  1037,  5189,  ...,     0,     0,     0],
        ...,
        [  101,  2019,  5875,  ...,     0,     0,     0],
        [  101,  2070,  2303,  ...,     0,     0,     0],
        [  101,  2009,  3957,  ...,     0,     0,     0]]) tensor([1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1,
        0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,
        1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1])
tensor([[  101,  1045,  2079,  ...,     0,     0,     0],
        [  101,  1012,  1012,  ...,     0,     0,     0],
        [  101, 17894,  2229,  ...,     0,     0,     0],
        ...,
        [  101,  5609,  2377,  ...,     0,     0,     0],
        [  101,  2750,  2049,  ...,     0,     0,     0],
        [  101,  1996,  9555,  ...,     0,     0,     0]]) tensor([1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0,
        1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1,
        1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1])
tensor([[ 101, 1012, 1012,  ...,    0,    0,    0],
        [ 101, 1036, 1039,  ...,    0,    0,    0],
        [ 101, 2009, 1005,  ...,    0,    0,    0],
        ...,
        [ 101, 2009, 1005,  ...,    0,    0,    0],
        [ 101, 3383, 1996,  ...,    0,    0,    0],
        [ 101, 3885, 1010,  ...,    0,    0,    0]]) tensor([1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1,
        0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1,
        1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0])
tensor([[  101,  3904,  1997,  ...,     0,     0,     0],
        [  101,  2358, 27609,  ...,     0,     0,     0],
        [  101,  1011,  1048,  ...,     0,     0,     0],
        ...,
        [  101,  6919, 15962,  ...,     0,     0,     0],
        [  101,  1037, 13544,  ...,     0,     0,     0],
        [  101,  1037, 14401,  ...,     0,     0,     0]]) tensor([1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0,
        1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1,
        1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0])
tensor([[  101,  2821,  1010,  ...,     0,     0,     0],
        [  101,  1037, 24842,  ...,     0,     0,     0],
        [  101,  1037,  2995,  ...,     0,     0,     0],
        ...,
        [  101,  2023,  2003,  ...,     0,     0,     0],
        [  101,  2009,  1005,  ...,     0,     0,     0],
        [  101,  2019, 17837,  ...,     0,     0,     0]]) tensor([1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0,
        1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0,
        1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0])
tensor([[  101,  3972,  2401,  ...,     0,     0,     0],
        [  101,  2107,  1037,  ...,     0,     0,     0],
        [  101,  1996,  2466,  ...,     0,     0,     0],
        ...,
        [  101, 19580,  9530,  ...,     0,     0,     0],
        [  101,  2026,  2069,  ...,     0,     0,     0],
        [  101,  2065,  2017,  ...,     0,     0,     0]]) tensor([1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1,
        0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1,
        0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1])
tensor([[  101,  1998,  2009,  ...,     0,     0,     0],
        [  101,  1012,  1012,  ...,     0,     0,     0],
        [  101,  1037,  3809,  ...,     0,     0,     0],
        ...,
        [  101,  2062, 23259,  ...,     0,     0,     0],
        [  101,  2070,  1997,  ...,     0,     0,     0],
        [  101,  2750,  1996,  ...,     0,     0,     0]]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1,
        1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1,
        1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0])
tensor([[  101,  4922,  9530,  ...,     0,     0,     0],
        [  101,  1996,  3291,  ...,     0,     0,     0],
        [  101, 19597,  1010,  ...,     0,     0,     0],
        ...,
        [  101,  1996,  3945,  ...,     0,     0,     0],
        [  101,  1996,  7472,  ...,     0,     0,     0],
        [  101,  1996,  2878,  ...,     0,     0,     0]]) tensor([1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0,
        1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1,
        1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0])
tensor([[  101,  6057,  1999,  ...,     0,     0,     0],
        [  101, 19840,  1998,  ...,     0,     0,     0],
        [  101,  2053,  5369,  ...,     0,     0,     0],
        ...,
        [  101, 17837,  2021,  ...,     0,     0,     0],
        [  101,  1996,  2972,  ...,     0,     0,     0],
        [  101,  2051,  1997,  ...,     0,     0,     0]]) tensor([1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0,
        1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0,
        0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0])
tensor([[  101,  1012,  1012,  ...,     0,     0,     0],
        [  101,  2009,  3957,  ...,     0,     0,     0],
        [  101,  5391,  2000,  ...,     0,     0,     0],
        ...,
        [  101,  2411, 26577,  ...,     0,     0,     0],
        [  101, 11951,  1998,  ...,     0,     0,     0],
        [  101,  2017, 12636,  ...,     0,     0,     0]]) tensor([1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1,
        0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0])
tensor([[  101,  2919,  3185,  ...,     0,     0,     0],
        [  101, 13971, 24466,  ...,     0,     0,     0],
        [  101,  5760, 21014,  ...,     0,     0,     0],
        ...,
        [  101,  1996,  3185,  ...,     0,     0,     0],
        [  101,  3811,  6749,  ...,     0,     0,     0],
        [  101,  2664,  2178,  ...,     0,     0,     0]]) tensor([0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0,
        1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0,
        0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0])
tensor([[  101,  8040,  2475,  ...,     0,     0,     0],
        [  101,  1996, 16587,  ...,     0,     0,     0],
        [  101,  7188,  2017,  ...,     0,     0,     0],
        ...,
        [  101,  6789,  2003,  ...,     0,     0,     0],
        [  101,  1996, 11167,  ...,     0,     0,     0],
        [  101,  1037,  2204,  ...,     0,     0,     0]]) tensor([0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0])
tensor([[ 101, 2009, 1005,  ...,    0,    0,    0],
        [ 101, 8854, 1005,  ...,    0,    0,    0],
        [ 101, 1012, 1012,  ...,    0,    0,    0],
        ...,
        [ 101, 2038, 1996,  ...,    0,    0,    0],
        [ 101, 3082, 2007,  ...,    0,    0,    0],
        [ 101, 2009, 1005,  ...,    0,    0,    0]]) tensor([1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1,
        0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1,
        0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0])
==> name Embedding.weight torch.Size([30522, 300]) tensor([[ 4.2230e-05, -1.9065e-05, -9.3058e-06,  ..., -7.9239e-07,
         -5.0981e-05, -4.8886e-06],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]], device='cuda:0')
==> name lstm.weight_ih_l0 torch.Size([1200, 300]) tensor([[ 7.7993e-06, -1.3215e-05,  1.4584e-05,  ...,  1.6755e-05,
          2.9775e-05, -2.6874e-05],
        [ 6.0085e-06,  1.2636e-05,  5.3291e-05,  ...,  4.6787e-05,
         -1.7101e-05, -1.8482e-05],
        [-3.0666e-05,  3.1863e-05, -7.6556e-06,  ...,  1.6869e-05,
          2.6005e-05, -1.3002e-05],
        ...,
        [-2.8630e-05,  2.4829e-06,  3.9781e-07,  ...,  2.2577e-05,
         -3.3521e-05, -8.7022e-06],
        [-6.8339e-06,  5.1970e-06,  1.1249e-05,  ..., -4.7038e-05,
         -4.4046e-05, -4.2831e-05],
        [-1.7736e-06,  6.0732e-05, -3.0688e-05,  ..., -3.9223e-05,
          1.5267e-05, -3.1453e-05]], device='cuda:0')
==> name lstm.weight_hh_l0 torch.Size([1200, 300]) tensor([[-3.5786e-06,  5.4966e-06,  3.9641e-06,  ..., -1.3822e-06,
          5.0404e-06,  1.0663e-06],
        [ 2.4632e-06, -1.4378e-06,  2.7565e-06,  ...,  1.2000e-06,
          4.2484e-06,  4.1374e-06],
        [ 1.4966e-06, -4.4433e-06,  3.7922e-06,  ..., -3.3612e-07,
         -4.3977e-06,  6.3105e-07],
        ...,
        [-2.2301e-06,  8.5225e-07, -1.7937e-06,  ...,  2.4093e-06,
          6.2725e-07,  1.0640e-06],
        [-4.3965e-06,  2.9945e-06,  3.0527e-06,  ...,  3.8875e-06,
          6.9185e-06, -1.4108e-06],
        [ 3.1231e-06,  3.6635e-08,  6.5498e-06,  ..., -2.5543e-08,
         -9.7543e-07, -6.1810e-06]], device='cuda:0')
==> name lstm.bias_ih_l0 torch.Size([1200]) tensor([ 2.8614e-05,  1.0944e-05, -1.0673e-05,  ..., -2.1390e-05,
        -1.9545e-06, -1.8336e-05], device='cuda:0')
==> name lstm.bias_hh_l0 torch.Size([1200]) tensor([ 2.8614e-05,  1.0944e-05, -1.0673e-05,  ..., -2.1390e-05,
        -1.9545e-06, -1.8336e-05], device='cuda:0')
==> name lstm.weight_ih_l0_reverse torch.Size([1200, 300]) tensor([[-3.9726e-06,  1.2754e-05, -2.9251e-05,  ...,  2.5929e-05,
         -1.0195e-05,  2.2429e-05],
        [ 3.0552e-05,  2.2706e-06, -4.5480e-05,  ..., -3.2217e-05,
          6.3837e-05,  4.7891e-05],
        [-9.8156e-06,  9.4372e-06,  7.7253e-06,  ...,  9.4547e-06,
          3.4189e-06,  2.9034e-05],
        ...,
        [-3.1292e-06,  2.0080e-05,  1.6043e-05,  ..., -6.7793e-06,
          1.3014e-05, -4.8851e-06],
        [ 1.5073e-05,  3.4953e-05,  9.3758e-06,  ..., -2.5992e-06,
          2.8528e-05, -1.2979e-05],
        [ 1.4950e-05, -3.5942e-05, -1.6259e-05,  ...,  1.0299e-05,
          4.0642e-05,  2.7164e-05]], device='cuda:0')
==> name lstm.weight_hh_l0_reverse torch.Size([1200, 300]) tensor([[-3.3602e-06,  1.6615e-06, -2.6806e-06,  ..., -1.4742e-06,
          1.1405e-06, -1.0554e-06],
        [-5.2252e-07,  2.5448e-06, -6.9027e-07,  ...,  4.6444e-07,
          6.1627e-07,  3.4707e-06],
        [ 3.0895e-06,  8.4538e-06,  2.0027e-06,  ...,  8.8477e-06,
         -1.6384e-06, -1.4835e-06],
        ...,
        [-3.4950e-06, -2.6555e-06, -3.1937e-06,  ...,  2.4189e-06,
          3.2253e-06,  1.1385e-06],
        [-2.8800e-08, -4.9009e-07, -3.7254e-07,  ...,  2.8913e-06,
          4.4354e-07, -2.9416e-06],
        [ 2.4542e-06, -8.0091e-07, -1.4835e-06,  ...,  2.4673e-06,
          9.8547e-07, -2.4344e-06]], device='cuda:0')
==> name lstm.bias_ih_l0_reverse torch.Size([1200]) tensor([-1.3321e-05,  4.3719e-05,  1.9713e-05,  ...,  3.6401e-07,
        -1.9666e-05,  1.9509e-05], device='cuda:0')
==> name lstm.bias_hh_l0_reverse torch.Size([1200]) tensor([-1.3321e-05,  4.3719e-05,  1.9713e-05,  ...,  3.6401e-07,
        -1.9666e-05,  1.9509e-05], device='cuda:0')
==> name fc1.weight torch.Size([192, 600]) tensor([[ 2.0400e-04, -1.4758e-04,  4.4597e-06,  ..., -3.2184e-04,
         -2.4492e-04,  8.7691e-05],
        [ 1.5384e-04,  1.9441e-05, -4.7800e-04,  ..., -2.1407e-04,
         -4.7313e-04,  3.0874e-05],
        [ 2.2362e-04,  1.6126e-04,  2.6854e-04,  ..., -1.3622e-04,
          1.1593e-04,  1.8760e-04],
        ...,
        [ 8.6597e-05,  4.4232e-05,  2.3102e-04,  ..., -4.4755e-06,
          2.3850e-04,  2.7081e-04],
        [ 9.7869e-05, -7.4429e-05, -9.2419e-05,  ..., -2.1105e-04,
         -1.2932e-04,  1.2780e-05],
        [ 1.0612e-05, -1.4214e-04, -1.0204e-04,  ..., -4.8872e-04,
         -2.7368e-04,  1.7682e-04]], device='cuda:0')
==> name fc1.bias torch.Size([192]) tensor([-1.2618e-04, -1.1623e-04, -8.2057e-04, -5.8135e-04,  2.0349e-04,
        -8.4920e-04,  9.7393e-04,  1.0807e-03, -4.4371e-04,  1.1010e-03,
        -1.0268e-03, -1.4276e-03, -5.1999e-05,  9.7916e-04,  7.3644e-04,
         2.5844e-04,  1.1834e-03,  5.3926e-04,  1.9539e-05,  1.2049e-03,
        -1.1401e-03,  5.6881e-04,  6.2945e-04,  5.3492e-05, -1.2490e-03,
         1.1224e-03,  3.1284e-04,  8.8505e-04, -3.6632e-04, -4.6538e-04,
         1.4381e-03, -7.9615e-04,  6.2246e-04,  1.6514e-04, -2.0929e-04,
         1.2195e-03, -3.2803e-04, -3.6128e-04,  2.9853e-03, -7.8532e-04,
        -2.4615e-04,  5.0912e-04,  5.9110e-04,  2.2227e-04, -1.8508e-04,
        -8.6696e-04, -4.7281e-04,  8.6800e-04, -3.2449e-04,  9.0874e-04,
         8.1321e-04,  5.6640e-04, -1.1113e-03, -1.5657e-03,  1.4233e-04,
         3.6083e-05,  1.7549e-04,  8.1607e-04, -1.1224e-06, -2.6542e-03,
         5.2025e-05, -8.0939e-04, -4.8209e-04,  1.1174e-04, -1.7895e-04,
        -1.0604e-03,  3.8469e-04,  5.3471e-04,  2.4847e-04,  1.7604e-04,
         1.2327e-03, -9.8908e-04,  1.0281e-03,  7.0062e-04,  1.8596e-03,
        -9.6058e-04,  2.1158e-04,  1.6116e-03, -2.8147e-04, -2.4332e-03,
         9.8813e-05,  2.0200e-04,  3.7784e-04,  3.3949e-04,  9.7601e-04,
         2.8309e-04, -5.3194e-04,  3.1158e-04,  2.7934e-04,  2.1008e-04,
        -1.0872e-03, -1.3683e-04,  3.8273e-04, -9.1598e-05,  1.5379e-03,
        -1.3508e-03,  2.6528e-04,  5.1554e-04,  1.8539e-04,  1.9769e-05,
        -2.4379e-04, -2.1743e-05, -2.4138e-03, -6.7965e-04,  4.9482e-04,
        -1.3133e-03,  3.5803e-04, -1.2732e-03, -2.4882e-04,  1.2504e-03,
         7.1299e-04, -1.1206e-03, -5.7127e-06, -6.5151e-04,  4.0154e-05,
        -2.1187e-04,  1.7165e-03, -3.1759e-05,  3.0391e-03,  4.3683e-05,
         2.6439e-04, -2.7031e-04, -1.7032e-03, -7.6147e-04, -5.3746e-04,
         2.2849e-04, -1.1123e-04, -7.1178e-05, -1.4385e-03, -3.9510e-04,
        -4.6443e-05, -2.2469e-04,  3.9351e-04, -7.6954e-04,  1.3356e-03,
        -1.0380e-04,  5.0775e-04, -1.2811e-03, -6.8452e-04, -2.4733e-03,
         1.5394e-04, -1.9442e-03, -2.9740e-04,  9.1455e-04,  9.3974e-04,
         2.0938e-04,  2.8433e-04, -1.0268e-04, -3.2689e-04,  5.8637e-04,
         1.9223e-04,  3.2884e-05,  1.7159e-04,  6.5707e-05,  1.5475e-04,
        -1.3067e-04,  4.6852e-04,  4.4591e-04, -2.6850e-04, -1.2031e-03,
         1.5133e-03,  4.7051e-07,  1.2918e-03, -9.2941e-04, -7.8983e-04,
        -1.8571e-05, -6.7251e-04,  9.8552e-04,  9.5853e-05, -1.8218e-03,
         6.6227e-04, -6.4014e-04, -1.6240e-03,  1.1302e-04, -4.7173e-04,
        -2.9708e-05,  3.1982e-04, -3.1946e-04, -3.8108e-04, -3.0614e-04,
         5.8587e-04, -5.4914e-04, -7.7252e-04, -2.7882e-04, -9.1450e-05,
        -3.6095e-04,  4.1672e-04, -1.1636e-03,  1.0271e-03,  2.4919e-05,
         3.3625e-04,  4.8611e-04], device='cuda:0')
==> name fc2.weight torch.Size([2, 192]) tensor([[-3.0097e-03, -1.0960e-03,  9.3264e-04,  2.2172e-04,  1.0365e-03,
          2.4723e-03,  1.0819e-03, -1.9123e-03, -6.8544e-04, -4.7589e-04,
          2.2640e-03, -2.2092e-03,  5.1943e-04,  8.3544e-04,  1.1479e-04,
         -7.6184e-04, -2.4338e-03,  3.4778e-04,  1.5613e-03,  1.3485e-03,
         -7.4852e-04,  1.5982e-04, -2.3667e-04, -1.5555e-04, -2.1722e-04,
         -1.5317e-03, -7.1298e-05,  4.1156e-05,  3.3697e-04, -7.3226e-04,
          4.5093e-03, -1.6853e-03, -7.0971e-04, -3.5070e-04,  2.9620e-04,
          1.1602e-03,  1.0547e-03,  1.1621e-03,  3.2647e-03, -1.6378e-03,
          1.2815e-03,  3.4204e-04, -1.4900e-03, -8.6283e-04,  2.4618e-03,
         -9.1836e-04, -3.6641e-04, -1.1452e-03,  1.3710e-03,  1.8462e-03,
          1.2349e-03,  4.0038e-04, -7.9599e-04, -1.8370e-03,  2.6668e-04,
         -9.9224e-05,  1.8842e-04, -6.2963e-04, -9.2829e-05, -8.1622e-04,
         -1.9047e-03, -1.1637e-03, -2.7579e-03,  1.7838e-03,  2.1388e-03,
          7.5231e-04,  2.3763e-03, -7.4633e-04, -1.5383e-03,  1.5548e-03,
         -4.4205e-04,  1.7522e-03,  7.6068e-04,  1.4291e-03,  1.2938e-04,
          2.2605e-03, -5.0091e-04, -5.7706e-06,  9.7063e-04,  1.1633e-03,
          5.4042e-04,  7.5351e-04,  1.2140e-03,  2.6253e-04, -2.3935e-03,
          4.6956e-04, -5.8803e-06,  9.3242e-04,  3.5897e-04, -4.8221e-04,
          4.1626e-04,  5.3315e-05,  1.3848e-03, -2.2520e-03,  2.1808e-03,
          4.1476e-03,  1.1002e-03,  7.3134e-04, -7.7379e-04,  1.6733e-03,
         -2.0954e-03, -6.5416e-04,  7.6976e-04,  2.0514e-03,  8.9781e-05,
         -4.8760e-04,  1.2055e-03, -9.9939e-04,  5.6116e-04, -2.7841e-03,
         -1.5925e-04, -5.1816e-04,  1.3370e-03,  1.5648e-03,  1.3067e-03,
          9.2659e-05,  1.9917e-03, -8.4408e-04,  2.2145e-03, -1.8822e-04,
          1.3546e-03, -1.1194e-03, -3.9861e-04,  5.8645e-04, -2.7101e-03,
          2.1077e-03,  2.4617e-03,  5.3460e-04, -1.0464e-03,  6.4205e-04,
          5.9256e-04, -4.8603e-04,  1.6327e-03, -2.5321e-05, -2.7557e-04,
         -1.5795e-03,  1.9604e-03, -7.0705e-04,  1.0400e-03,  2.5710e-04,
          1.2946e-03,  1.1184e-03, -4.9735e-04, -1.6358e-03, -5.6588e-04,
         -3.6129e-04,  7.7156e-04,  1.6126e-03,  2.2683e-03, -8.0962e-04,
          1.0241e-04,  1.5725e-03,  8.3127e-04, -3.4766e-03, -2.0392e-03,
          6.3213e-04,  7.3896e-04, -1.3052e-03, -1.7937e-04, -3.4538e-04,
          2.8673e-03, -6.4618e-04,  1.1819e-03, -1.9448e-03,  1.4414e-03,
         -5.0782e-04, -2.1088e-04, -7.8434e-04,  1.9730e-03, -1.1136e-03,
          9.5673e-04,  4.9532e-04,  6.1394e-05,  2.7364e-03, -1.9375e-03,
         -3.1771e-04,  1.5215e-03, -3.4891e-04, -2.1531e-04, -2.1272e-04,
          2.8509e-03,  2.7178e-03,  2.0013e-04,  2.0454e-03,  4.4318e-03,
          2.5397e-04, -2.9243e-03,  1.3475e-03, -2.8914e-03, -1.8565e-03,
          4.6900e-04,  3.7575e-04],
        [-7.0430e-04,  1.8460e-04, -1.6650e-03,  1.0919e-03, -5.0602e-04,
          9.7998e-04,  1.4359e-03, -1.5881e-05,  5.9973e-04, -9.0277e-04,
          2.1701e-03, -4.5154e-03,  8.8929e-04,  2.5663e-04, -8.2506e-04,
         -1.0823e-03,  7.8826e-04, -2.9021e-04, -7.7928e-05, -8.7208e-04,
          6.5332e-04, -3.0408e-04,  8.8859e-04, -4.0228e-04,  4.0365e-04,
         -6.0952e-04,  3.6499e-04, -1.1266e-03,  6.3603e-04, -1.2909e-03,
         -7.0970e-04, -8.3663e-04,  4.8507e-04, -6.9289e-04,  1.0852e-04,
         -6.3880e-06,  5.1903e-04,  6.6520e-04, -2.3003e-03,  1.5695e-03,
         -5.0845e-04,  5.0995e-04, -8.9948e-04,  9.0930e-04,  4.1696e-04,
          1.0391e-03, -6.4694e-04, -2.4147e-04, -1.1099e-03, -9.2970e-04,
         -4.0735e-03,  2.7234e-03,  2.0877e-04, -2.0211e-03, -6.3784e-04,
         -4.9362e-04, -1.2676e-04, -6.0552e-04, -2.2425e-04, -1.0639e-03,
         -2.2918e-04, -1.9430e-03,  1.8477e-03, -9.5146e-04, -6.5453e-04,
         -1.2100e-03, -4.0323e-03,  8.8915e-04, -1.8360e-04, -1.3620e-03,
          1.3298e-03,  2.0634e-03, -9.5023e-04,  1.5261e-03, -2.8544e-03,
         -1.1242e-03, -1.0007e-04,  3.0480e-03, -1.1901e-04,  2.2143e-05,
         -1.6120e-03,  2.4468e-04,  1.4999e-05,  2.6309e-04,  1.2693e-03,
          3.5871e-04, -8.9383e-04, -2.3781e-03, -6.0906e-04, -2.7492e-03,
          8.2449e-04,  2.5274e-04,  1.2181e-04,  5.8578e-04, -6.7572e-04,
         -6.7342e-04, -2.2609e-03, -1.8873e-03, -7.5978e-04, -1.2762e-03,
         -2.1965e-03,  1.0845e-04, -1.8298e-03, -3.4107e-03,  3.6099e-04,
         -3.3265e-03,  2.0518e-03,  8.1709e-04, -1.0698e-03,  6.6441e-04,
         -2.0000e-04, -9.0220e-04, -1.4234e-03, -1.7808e-03, -1.4797e-04,
         -6.0659e-04, -3.5538e-03, -2.0794e-04,  1.0789e-04, -6.1594e-04,
         -7.7508e-04,  7.0140e-04,  3.0861e-03,  9.5937e-06, -4.7875e-03,
         -3.3320e-03,  7.6561e-04, -6.3974e-04, -3.0101e-03,  1.2589e-03,
         -1.3593e-03, -7.7443e-04, -1.1013e-03, -3.7467e-04, -7.0084e-04,
         -6.3744e-04, -2.5795e-03, -1.6876e-03, -1.3131e-03, -1.7281e-03,
          1.3076e-03,  9.5232e-04,  7.3897e-04,  3.3290e-04,  3.9483e-04,
          8.2313e-04,  2.5328e-03,  2.5006e-04,  3.8429e-04, -6.2986e-05,
         -1.5504e-03, -7.6840e-05,  2.4856e-04, -4.3548e-04,  3.7028e-04,
         -1.4146e-04, -3.9461e-03, -1.0136e-05,  1.2737e-04,  3.8577e-04,
         -1.6588e-03,  9.7886e-04, -8.8867e-04,  9.7921e-04, -5.7926e-04,
          2.3999e-04, -1.9648e-03, -2.1893e-05,  6.0402e-04, -1.5125e-03,
         -7.4225e-04,  2.8397e-04,  3.3781e-04,  2.9826e-04, -6.8388e-04,
          6.8008e-04,  1.1227e-03,  1.8273e-03,  1.7250e-03,  1.0601e-03,
         -2.0412e-03, -3.1919e-04, -5.3666e-04, -3.0871e-04, -4.6449e-05,
          1.2092e-03,  5.0636e-04, -7.6126e-04,  5.9707e-04, -2.9973e-03,
         -4.6522e-04, -1.4306e-03]], device='cuda:0')
==> name fc2.bias torch.Size([2]) tensor([ 0.0061, -0.0061], device='cuda:0')